{"ast":null,"code":"import _classCallCheck from \"C:\\\\React\\\\react-gradu\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\React\\\\react-gradu\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\React\\\\react-gradu\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\React\\\\react-gradu\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport React, { Component } from \"react\";\nexport var UserArea =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UserArea, _Component);\n\n  function UserArea() {\n    _classCallCheck(this, UserArea);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(UserArea).apply(this, arguments));\n  }\n\n  return UserArea;\n}(Component);\nexport default UserArea;","map":{"version":3,"sources":["C:\\React\\react-gradu\\src\\components\\independent\\webRTCRoom\\UserArea.jsx"],"names":["React","Component","UserArea"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,WAAaC,QAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA,EAA8BD,SAA9B;AA2FA,eAAeC,QAAf","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport class UserArea extends Component {\r\n  // attachStream() {\r\n  //   var scope = this;\r\n  //   var video = document.getElementById(\"stream-\" + scope.props.userId);\r\n  //   var renderedStreamId = document.getElementById(\r\n  //     \"stream-id-\" + scope.props.userId\r\n  //   );\r\n  //   if (\r\n  //     video &&\r\n  //     renderedStreamId &&\r\n  //     scope.props.user.stream &&\r\n  //     scope.props.user.streamId !== renderedStreamId.value\r\n  //   ) {\r\n  //     window.attachMediaStream(video, scope.props.user.stream);\r\n  //     renderedStreamId.value = scope.props.user.streamId;\r\n  //     if (video.hasAttribute(\"controls\")) {\r\n  //       setTimeout(function() {\r\n  //         video.removeAttribute(\"controls\");\r\n  //       });\r\n  //       video.setAttribute(\"playsinline\", true);\r\n  //     }\r\n  //   }\r\n  // }\r\n  // componentDidMount() {\r\n  //   this.attachStream();\r\n  // }\r\n  // componentDidUpdate() {\r\n  //   this.attachStream();\r\n  // }\r\n  // render() {\r\n  //   var scope = this;\r\n  //   var outputHTML = [];\r\n  //   // Self has not shared any stream.\r\n  //   if (!scope.props.user.stream && scope.props.userId === \"self\") {\r\n  //     outputHTML.push(\r\n  //       <span className=\"userInfo\">\r\n  //         Share your camera and microphone to participate in the call\r\n  //       </span>\r\n  //     );\r\n  //     // If is not self and has not been connected\r\n  //   } else if (!scope.props.user.connected && scope.props.userId !== \"self\") {\r\n  //     outputHTML.push(<span className=\"userInfo\">Joining...</span>);\r\n  //     // Peer is connected.\r\n  //   } else {\r\n  //     // Push the <video> element.\r\n  //     outputHTML.push(\r\n  //       React.DOM.video({\r\n  //         id: \"stream-\" + scope.props.userId,\r\n  //         autoPlay: true,\r\n  //         muted: scope.props.userId === \"self\",\r\n  //         controls: true\r\n  //       })\r\n  //     );\r\n  //     outputHTML.push(\r\n  //       React.DOM.input({\r\n  //         id: \"stream-id-\" + scope.props.userId,\r\n  //         type: \"hidden\",\r\n  //         value: null\r\n  //       })\r\n  //     );\r\n  //     var mediaMuted = [];\r\n  //     var mediaDisabled = [];\r\n  //     if (!scope.props.user.audio) {\r\n  //       mediaDisabled.push(\"Audio\");\r\n  //     } else if (this.props.user.audio.muted) {\r\n  //       mediaMuted.push(\"Audio\");\r\n  //     }\r\n  //     if (!scope.props.user.video) {\r\n  //       mediaDisabled.push(\"Video\");\r\n  //     } else if (this.props.user.video.muted) {\r\n  //       mediaMuted.push(\"Video\");\r\n  //     }\r\n  //     outputHTML.push(\r\n  //       <span className=\"userInfo\">\r\n  //         {typeof scope.props.user.mcuConnected === \"boolean\" &&\r\n  //         !scope.props.user.mcuConnected\r\n  //           ? \"Connecting to MCU ...\"\r\n  //           : \"\"}\r\n  //         <br />\r\n  //         {mediaDisabled.length > 0\r\n  //           ? mediaDisabled.join(\"/\") + \" disabled\"\r\n  //           : \"\"}{\" \"}\r\n  //         <br />\r\n  //         {mediaMuted.length > 0 ? mediaMuted.join(\"/\") + \" muted\" : \"\"}\r\n  //       </span>\r\n  //     );\r\n  //   }\r\n  //   return <div>{outputHTML}</div>;\r\n  // }\r\n}\r\n\r\nexport default UserArea;\r\n"]},"metadata":{},"sourceType":"module"}