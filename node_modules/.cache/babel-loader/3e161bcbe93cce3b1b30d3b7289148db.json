{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport classNames from 'classnames';\nimport Header from './Header';\nimport Combobox from './Combobox';\n\nfunction noop() {}\n\nfunction generateOptions(length, disabledOptions, hideDisabledOptions) {\n  var step = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n  var arr = [];\n\n  for (var value = 0; value < length; value += step) {\n    if (!disabledOptions || disabledOptions.indexOf(value) < 0 || !hideDisabledOptions) {\n      arr.push(value);\n    }\n  }\n\n  return arr;\n}\n\nfunction toNearestValidTime(time, hourOptions, minuteOptions, secondOptions) {\n  var hour = hourOptions.slice().sort(function (a, b) {\n    return Math.abs(time.hour() - a) - Math.abs(time.hour() - b);\n  })[0];\n  var minute = minuteOptions.slice().sort(function (a, b) {\n    return Math.abs(time.minute() - a) - Math.abs(time.minute() - b);\n  })[0];\n  var second = secondOptions.slice().sort(function (a, b) {\n    return Math.abs(time.second() - a) - Math.abs(time.second() - b);\n  })[0];\n  return moment(\"\".concat(hour, \":\").concat(minute, \":\").concat(second), 'HH:mm:ss');\n}\n\nvar Panel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Panel, _Component);\n\n  function Panel(props) {\n    var _this;\n\n    _classCallCheck(this, Panel);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Panel).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onChange\", function (newValue) {\n      var onChange = _this.props.onChange;\n\n      _this.setState({\n        value: newValue\n      });\n\n      onChange(newValue);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onAmPmChange\", function (ampm) {\n      var onAmPmChange = _this.props.onAmPmChange;\n      onAmPmChange(ampm);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCurrentSelectPanelChange\", function (currentSelectPanel) {\n      _this.setState({\n        currentSelectPanel: currentSelectPanel\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"disabledHours\", function () {\n      var _this$props = _this.props,\n          use12Hours = _this$props.use12Hours,\n          disabledHours = _this$props.disabledHours;\n      var disabledOptions = disabledHours();\n\n      if (use12Hours && Array.isArray(disabledOptions)) {\n        if (_this.isAM()) {\n          disabledOptions = disabledOptions.filter(function (h) {\n            return h < 12;\n          }).map(function (h) {\n            return h === 0 ? 12 : h;\n          });\n        } else {\n          disabledOptions = disabledOptions.map(function (h) {\n            return h === 12 ? 12 : h - 12;\n          });\n        }\n      }\n\n      return disabledOptions;\n    });\n\n    _this.state = {\n      value: props.value\n    };\n    return _this;\n  }\n\n  _createClass(Panel, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var value = nextProps.value;\n\n      if (value) {\n        this.setState({\n          value: value\n        });\n      }\n    }\n  }, {\n    key: \"close\",\n    // https://github.com/ant-design/ant-design/issues/5829\n    value: function close() {\n      var onEsc = this.props.onEsc;\n      onEsc();\n    }\n  }, {\n    key: \"isAM\",\n    value: function isAM() {\n      var defaultOpenValue = this.props.defaultOpenValue;\n      var value = this.state.value;\n      var realValue = value || defaultOpenValue;\n      return realValue.hour() >= 0 && realValue.hour() < 12;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          prefixCls = _this$props2.prefixCls,\n          className = _this$props2.className,\n          placeholder = _this$props2.placeholder,\n          disabledMinutes = _this$props2.disabledMinutes,\n          disabledSeconds = _this$props2.disabledSeconds,\n          hideDisabledOptions = _this$props2.hideDisabledOptions,\n          showHour = _this$props2.showHour,\n          showMinute = _this$props2.showMinute,\n          showSecond = _this$props2.showSecond,\n          format = _this$props2.format,\n          defaultOpenValue = _this$props2.defaultOpenValue,\n          clearText = _this$props2.clearText,\n          onEsc = _this$props2.onEsc,\n          addon = _this$props2.addon,\n          use12Hours = _this$props2.use12Hours,\n          focusOnOpen = _this$props2.focusOnOpen,\n          onKeyDown = _this$props2.onKeyDown,\n          hourStep = _this$props2.hourStep,\n          minuteStep = _this$props2.minuteStep,\n          secondStep = _this$props2.secondStep,\n          inputReadOnly = _this$props2.inputReadOnly,\n          clearIcon = _this$props2.clearIcon;\n      var _this$state = this.state,\n          value = _this$state.value,\n          currentSelectPanel = _this$state.currentSelectPanel;\n      var disabledHourOptions = this.disabledHours();\n      var disabledMinuteOptions = disabledMinutes(value ? value.hour() : null);\n      var disabledSecondOptions = disabledSeconds(value ? value.hour() : null, value ? value.minute() : null);\n      var hourOptions = generateOptions(24, disabledHourOptions, hideDisabledOptions, hourStep);\n      var minuteOptions = generateOptions(60, disabledMinuteOptions, hideDisabledOptions, minuteStep);\n      var secondOptions = generateOptions(60, disabledSecondOptions, hideDisabledOptions, secondStep);\n      var validDefaultOpenValue = toNearestValidTime(defaultOpenValue, hourOptions, minuteOptions, secondOptions);\n      return React.createElement(\"div\", {\n        className: classNames(className, \"\".concat(prefixCls, \"-inner\"))\n      }, React.createElement(Header, {\n        clearText: clearText,\n        prefixCls: prefixCls,\n        defaultOpenValue: validDefaultOpenValue,\n        value: value,\n        currentSelectPanel: currentSelectPanel,\n        onEsc: onEsc,\n        format: format,\n        placeholder: placeholder,\n        hourOptions: hourOptions,\n        minuteOptions: minuteOptions,\n        secondOptions: secondOptions,\n        disabledHours: this.disabledHours,\n        disabledMinutes: disabledMinutes,\n        disabledSeconds: disabledSeconds,\n        onChange: this.onChange,\n        focusOnOpen: focusOnOpen,\n        onKeyDown: onKeyDown,\n        inputReadOnly: inputReadOnly,\n        clearIcon: clearIcon\n      }), React.createElement(Combobox, {\n        prefixCls: prefixCls,\n        value: value,\n        defaultOpenValue: validDefaultOpenValue,\n        format: format,\n        onChange: this.onChange,\n        onAmPmChange: this.onAmPmChange,\n        showHour: showHour,\n        showMinute: showMinute,\n        showSecond: showSecond,\n        hourOptions: hourOptions,\n        minuteOptions: minuteOptions,\n        secondOptions: secondOptions,\n        disabledHours: this.disabledHours,\n        disabledMinutes: disabledMinutes,\n        disabledSeconds: disabledSeconds,\n        onCurrentSelectPanelChange: this.onCurrentSelectPanelChange,\n        use12Hours: use12Hours,\n        isAM: this.isAM()\n      }), addon(this));\n    }\n  }]);\n\n  return Panel;\n}(Component);\n\n_defineProperty(Panel, \"propTypes\", {\n  clearText: PropTypes.string,\n  prefixCls: PropTypes.string,\n  className: PropTypes.string,\n  defaultOpenValue: PropTypes.object,\n  value: PropTypes.object,\n  placeholder: PropTypes.string,\n  format: PropTypes.string,\n  inputReadOnly: PropTypes.bool,\n  disabledHours: PropTypes.func,\n  disabledMinutes: PropTypes.func,\n  disabledSeconds: PropTypes.func,\n  hideDisabledOptions: PropTypes.bool,\n  onChange: PropTypes.func,\n  onAmPmChange: PropTypes.func,\n  onEsc: PropTypes.func,\n  showHour: PropTypes.bool,\n  showMinute: PropTypes.bool,\n  showSecond: PropTypes.bool,\n  use12Hours: PropTypes.bool,\n  hourStep: PropTypes.number,\n  minuteStep: PropTypes.number,\n  secondStep: PropTypes.number,\n  addon: PropTypes.func,\n  focusOnOpen: PropTypes.bool,\n  onKeyDown: PropTypes.func,\n  clearIcon: PropTypes.node\n});\n\n_defineProperty(Panel, \"defaultProps\", {\n  prefixCls: 'rc-time-picker-panel',\n  onChange: noop,\n  disabledHours: noop,\n  disabledMinutes: noop,\n  disabledSeconds: noop,\n  defaultOpenValue: moment(),\n  use12Hours: false,\n  addon: noop,\n  onKeyDown: noop,\n  onAmPmChange: noop,\n  inputReadOnly: false\n});\n\nexport default Panel;","map":null,"metadata":{},"sourceType":"module"}