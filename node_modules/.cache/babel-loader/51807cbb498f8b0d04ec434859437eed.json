{"ast":null,"code":"import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nvar ROW = 4;\nvar COL = 3;\n\nfunction goYear(direction) {\n  var value = this.state.value.clone();\n  value.add(direction, 'year');\n  this.setState({\n    value: value\n  });\n}\n\nfunction chooseYear(year) {\n  var value = this.state.value.clone();\n  value.year(year);\n  value.month(this.state.value.month());\n  this.props.onSelect(value);\n}\n\nvar YearPanel = function (_React$Component) {\n  _inherits(YearPanel, _React$Component);\n\n  function YearPanel(props) {\n    _classCallCheck(this, YearPanel);\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));\n\n    _this.prefixCls = props.rootPrefixCls + '-year-panel';\n    _this.state = {\n      value: props.value || props.defaultValue\n    };\n    _this.nextDecade = goYear.bind(_this, 10);\n    _this.previousDecade = goYear.bind(_this, -10);\n    return _this;\n  }\n\n  YearPanel.prototype.years = function years() {\n    var value = this.state.value;\n    var currentYear = value.year();\n    var startYear = parseInt(currentYear / 10, 10) * 10;\n    var previousYear = startYear - 1;\n    var years = [];\n    var index = 0;\n\n    for (var rowIndex = 0; rowIndex < ROW; rowIndex++) {\n      years[rowIndex] = [];\n\n      for (var colIndex = 0; colIndex < COL; colIndex++) {\n        var year = previousYear + index;\n        var content = String(year);\n        years[rowIndex][colIndex] = {\n          content: content,\n          year: year,\n          title: content\n        };\n        index++;\n      }\n    }\n\n    return years;\n  };\n\n  YearPanel.prototype.render = function render() {\n    var _this2 = this;\n\n    var props = this.props;\n    var value = this.state.value;\n    var locale = props.locale,\n        renderFooter = props.renderFooter;\n    var years = this.years();\n    var currentYear = value.year();\n    var startYear = parseInt(currentYear / 10, 10) * 10;\n    var endYear = startYear + 9;\n    var prefixCls = this.prefixCls;\n    var yeasEls = years.map(function (row, index) {\n      var tds = row.map(function (yearData) {\n        var _classNameMap;\n\n        var classNameMap = (_classNameMap = {}, _classNameMap[prefixCls + '-cell'] = 1, _classNameMap[prefixCls + '-selected-cell'] = yearData.year === currentYear, _classNameMap[prefixCls + '-last-decade-cell'] = yearData.year < startYear, _classNameMap[prefixCls + '-next-decade-cell'] = yearData.year > endYear, _classNameMap);\n        var clickHandler = void 0;\n\n        if (yearData.year < startYear) {\n          clickHandler = _this2.previousDecade;\n        } else if (yearData.year > endYear) {\n          clickHandler = _this2.nextDecade;\n        } else {\n          clickHandler = chooseYear.bind(_this2, yearData.year);\n        }\n\n        return React.createElement('td', {\n          role: 'gridcell',\n          title: yearData.title,\n          key: yearData.content,\n          onClick: clickHandler,\n          className: classnames(classNameMap)\n        }, React.createElement('a', {\n          className: prefixCls + '-year'\n        }, yearData.content));\n      });\n      return React.createElement('tr', {\n        key: index,\n        role: 'row'\n      }, tds);\n    });\n    var footer = renderFooter && renderFooter('year');\n    return React.createElement('div', {\n      className: this.prefixCls\n    }, React.createElement('div', null, React.createElement('div', {\n      className: prefixCls + '-header'\n    }, React.createElement('a', {\n      className: prefixCls + '-prev-decade-btn',\n      role: 'button',\n      onClick: this.previousDecade,\n      title: locale.previousDecade\n    }), React.createElement('a', {\n      className: prefixCls + '-decade-select',\n      role: 'button',\n      onClick: props.onDecadePanelShow,\n      title: locale.decadeSelect\n    }, React.createElement('span', {\n      className: prefixCls + '-decade-select-content'\n    }, startYear, '-', endYear), React.createElement('span', {\n      className: prefixCls + '-decade-select-arrow'\n    }, 'x')), React.createElement('a', {\n      className: prefixCls + '-next-decade-btn',\n      role: 'button',\n      onClick: this.nextDecade,\n      title: locale.nextDecade\n    })), React.createElement('div', {\n      className: prefixCls + '-body'\n    }, React.createElement('table', {\n      className: prefixCls + '-table',\n      cellSpacing: '0',\n      role: 'grid'\n    }, React.createElement('tbody', {\n      className: prefixCls + '-tbody'\n    }, yeasEls))), footer && React.createElement('div', {\n      className: prefixCls + '-footer'\n    }, footer)));\n  };\n\n  return YearPanel;\n}(React.Component);\n\nexport default YearPanel;\nYearPanel.propTypes = {\n  rootPrefixCls: PropTypes.string,\n  value: PropTypes.object,\n  defaultValue: PropTypes.object,\n  renderFooter: PropTypes.func\n};\nYearPanel.defaultProps = {\n  onSelect: function onSelect() {}\n};","map":null,"metadata":{},"sourceType":"module"}