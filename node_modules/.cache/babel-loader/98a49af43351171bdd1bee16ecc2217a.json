{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport * as moment from 'moment';\nimport FullCalendar from \"rc-calendar/es/FullCalendar\";\nimport Header from './Header';\nimport enUS from './locale/en_US';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport { ConfigConsumer } from '../config-provider';\nimport interopDefault from '../_util/interopDefault';\nimport { polyfill } from 'react-lifecycles-compat';\n\nfunction noop() {\n  return null;\n}\n\nfunction zerofixed(v) {\n  if (v < 10) {\n    return \"0\".concat(v);\n  }\n\n  return \"\".concat(v);\n}\n\nvar Calendar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Calendar, _React$Component);\n\n  function Calendar(props) {\n    var _this;\n\n    _classCallCheck(this, Calendar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Calendar).call(this, props));\n\n    _this.monthCellRender = function (value) {\n      var _this$props$monthCell = _this.props.monthCellRender,\n          monthCellRender = _this$props$monthCell === void 0 ? noop : _this$props$monthCell;\n\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          prefixCls = _assertThisInitialize.prefixCls;\n\n      return React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-month\")\n      }, React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-value\")\n      }, value.localeData().monthsShort(value)), React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-content\")\n      }, monthCellRender(value)));\n    };\n\n    _this.dateCellRender = function (value) {\n      var _this$props$dateCellR = _this.props.dateCellRender,\n          dateCellRender = _this$props$dateCellR === void 0 ? noop : _this$props$dateCellR;\n\n      var _assertThisInitialize2 = _assertThisInitialized(_this),\n          prefixCls = _assertThisInitialize2.prefixCls;\n\n      return React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-date\")\n      }, React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-value\")\n      }, zerofixed(value.date())), React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-content\")\n      }, dateCellRender(value)));\n    };\n\n    _this.setValue = function (value, way) {\n      var prevValue = _this.props.value || _this.state.value;\n      var mode = _this.state.mode;\n\n      if (!('value' in _this.props)) {\n        _this.setState({\n          value: value\n        });\n      }\n\n      if (way === 'select') {\n        if (prevValue && prevValue.month() !== value.month()) {\n          _this.onPanelChange(value, mode);\n        }\n\n        if (_this.props.onSelect) {\n          _this.props.onSelect(value);\n        }\n      } else if (way === 'changePanel') {\n        _this.onPanelChange(value, mode);\n      }\n    };\n\n    _this.onHeaderValueChange = function (value) {\n      _this.setValue(value, 'changePanel');\n    };\n\n    _this.onHeaderTypeChange = function (mode) {\n      _this.setState({\n        mode: mode\n      });\n\n      _this.onPanelChange(_this.state.value, mode);\n    };\n\n    _this.onSelect = function (value) {\n      _this.setValue(value, 'select');\n    };\n\n    _this.getDateRange = function (validRange, disabledDate) {\n      return function (current) {\n        if (!current) {\n          return false;\n        }\n\n        var _validRange = _slicedToArray(validRange, 2),\n            startDate = _validRange[0],\n            endDate = _validRange[1];\n\n        var inRange = !current.isBetween(startDate, endDate, 'days', '[]');\n\n        if (disabledDate) {\n          return disabledDate(current) || inRange;\n        }\n\n        return inRange;\n      };\n    };\n\n    _this.getDefaultLocale = function () {\n      var result = _extends({}, enUS, _this.props.locale);\n\n      result.lang = _extends({}, result.lang, (_this.props.locale || {}).lang);\n      return result;\n    };\n\n    _this.renderCalendar = function (locale, localeCode) {\n      var _assertThisInitialize3 = _assertThisInitialized(_this),\n          state = _assertThisInitialize3.state,\n          props = _assertThisInitialize3.props;\n\n      var value = state.value,\n          mode = state.mode;\n\n      if (value && localeCode) {\n        value.locale(localeCode);\n      }\n\n      var customizePrefixCls = props.prefixCls,\n          style = props.style,\n          className = props.className,\n          fullscreen = props.fullscreen,\n          headerRender = props.headerRender,\n          dateFullCellRender = props.dateFullCellRender,\n          monthFullCellRender = props.monthFullCellRender;\n      var monthCellRender = monthFullCellRender || _this.monthCellRender;\n      var dateCellRender = dateFullCellRender || _this.dateCellRender;\n      var disabledDate = props.disabledDate;\n\n      if (props.validRange) {\n        disabledDate = _this.getDateRange(props.validRange, disabledDate);\n      }\n\n      return React.createElement(ConfigConsumer, null, function (_ref) {\n        var getPrefixCls = _ref.getPrefixCls;\n        var prefixCls = getPrefixCls('fullcalendar', customizePrefixCls); // To support old version react.\n        // Have to add prefixCls on the instance.\n        // https://github.com/facebook/react/issues/12397\n\n        _this.prefixCls = prefixCls;\n        var cls = className || '';\n\n        if (fullscreen) {\n          cls += \" \".concat(prefixCls, \"-fullscreen\");\n        }\n\n        return React.createElement(\"div\", {\n          className: cls,\n          style: style\n        }, React.createElement(Header, {\n          fullscreen: fullscreen,\n          type: mode,\n          headerRender: headerRender,\n          value: value,\n          locale: locale.lang,\n          prefixCls: prefixCls,\n          onTypeChange: _this.onHeaderTypeChange,\n          onValueChange: _this.onHeaderValueChange,\n          validRange: props.validRange\n        }), React.createElement(FullCalendar, _extends({}, props, {\n          disabledDate: disabledDate,\n          Select: noop,\n          locale: locale.lang,\n          type: mode === 'year' ? 'month' : 'date',\n          prefixCls: prefixCls,\n          showHeader: false,\n          value: value,\n          monthCellRender: monthCellRender,\n          dateCellRender: dateCellRender,\n          onSelect: _this.onSelect\n        })));\n      });\n    };\n\n    var value = props.value || props.defaultValue || interopDefault(moment)();\n\n    if (!interopDefault(moment).isMoment(value)) {\n      throw new Error('The value/defaultValue of Calendar must be a moment object after `antd@2.0`, ' + 'see: https://u.ant.design/calendar-value');\n    }\n\n    _this.state = {\n      value: value,\n      mode: props.mode || 'month'\n    };\n    return _this;\n  }\n\n  _createClass(Calendar, [{\n    key: \"onPanelChange\",\n    value: function onPanelChange(value, mode) {\n      var _this$props = this.props,\n          onPanelChange = _this$props.onPanelChange,\n          onChange = _this$props.onChange;\n\n      if (onPanelChange) {\n        onPanelChange(value, mode);\n      }\n\n      if (onChange && value !== this.state.value) {\n        onChange(value);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(LocaleReceiver, {\n        componentName: \"Calendar\",\n        defaultLocale: this.getDefaultLocale\n      }, this.renderCalendar);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps) {\n      var newState = {};\n\n      if ('value' in nextProps) {\n        newState.value = nextProps.value;\n      }\n\n      if ('mode' in nextProps) {\n        newState.mode = nextProps.mode;\n      }\n\n      return Object.keys(newState).length > 0 ? newState : null;\n    }\n  }]);\n\n  return Calendar;\n}(React.Component);\n\nCalendar.defaultProps = {\n  locale: {},\n  fullscreen: true,\n  onSelect: noop,\n  onPanelChange: noop,\n  onChange: noop,\n  headerRender: null\n};\nCalendar.propTypes = {\n  monthCellRender: PropTypes.func,\n  dateCellRender: PropTypes.func,\n  monthFullCellRender: PropTypes.func,\n  dateFullCellRender: PropTypes.func,\n  fullscreen: PropTypes.bool,\n  locale: PropTypes.object,\n  prefixCls: PropTypes.string,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  onPanelChange: PropTypes.func,\n  value: PropTypes.object,\n  onSelect: PropTypes.func,\n  onChange: PropTypes.func\n};\npolyfill(Calendar);\nexport default Calendar;","map":null,"metadata":{},"sourceType":"module"}