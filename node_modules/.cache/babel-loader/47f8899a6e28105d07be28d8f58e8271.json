{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport Menu, { MenuItem } from 'rc-menu';\nimport * as React from 'react';\nimport { MentionsContextConsumer } from './MentionsContext';\n/**\n * We only use Menu to display the candidate.\n * The focus is controlled by textarea to make accessibility easy.\n */\n\nvar DropdownMenu =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DropdownMenu, _React$Component);\n\n  function DropdownMenu() {\n    var _this;\n\n    _classCallCheck(this, DropdownMenu);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DropdownMenu).apply(this, arguments));\n\n    _this.renderDropdown = function (_ref) {\n      var notFoundContent = _ref.notFoundContent,\n          activeIndex = _ref.activeIndex,\n          setActiveIndex = _ref.setActiveIndex,\n          selectOption = _ref.selectOption,\n          onFocus = _ref.onFocus;\n      var _this$props = _this.props,\n          prefixCls = _this$props.prefixCls,\n          options = _this$props.options;\n      var activeOption = options[activeIndex] || {};\n      return React.createElement(Menu, {\n        prefixCls: \"\".concat(prefixCls, \"-menu\"),\n        activeKey: activeOption.value,\n        onSelect: function onSelect(_ref2) {\n          var key = _ref2.key;\n          var option = options.find(function (_ref3) {\n            var value = _ref3.value;\n            return value === key;\n          });\n          selectOption(option);\n        },\n        onFocus: onFocus\n      }, options.map(function (option, index) {\n        var value = option.value,\n            disabled = option.disabled,\n            children = option.children,\n            className = option.className,\n            style = option.style;\n        return React.createElement(MenuItem, {\n          key: value,\n          disabled: disabled,\n          className: className,\n          style: style,\n          onMouseEnter: function onMouseEnter() {\n            setActiveIndex(index);\n          }\n        }, children);\n      }), !options.length && React.createElement(MenuItem, {\n        disabled: true\n      }, notFoundContent));\n    };\n\n    return _this;\n  }\n\n  _createClass(DropdownMenu, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(MentionsContextConsumer, null, this.renderDropdown);\n    }\n  }]);\n\n  return DropdownMenu;\n}(React.Component);\n\nexport default DropdownMenu;","map":null,"metadata":{},"sourceType":"module"}