{"ast":null,"code":"import _classCallCheck from \"C:\\\\React\\\\react-gradu\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\React\\\\react-gradu\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\React\\\\react-gradu\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\React\\\\react-gradu\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\React\\\\react-gradu\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\React\\\\react-gradu\\\\src\\\\components\\\\independent\\\\webRTCRoom\\\\test.js\";\nimport React, { Component } from \"react\";\nvar maxTries = 0;\n\nfunction showChromeExtensionStatus() {\n  if (typeof window.getChromeExtensionStatus !== \"function\") return;\n  var gotResponse;\n  window.getChromeExtensionStatus(function (status) {\n    gotResponse = true;\n    document.getElementById(\"chrome-extension-status\").innerHTML = \"Chrome extension status is: <b>\" + status + \"</b>\";\n    console.info(\"getChromeExtensionStatus\", status);\n  });\n  maxTries++;\n  if (maxTries > 15) return;\n  setTimeout(function () {\n    if (!gotResponse) showChromeExtensionStatus();\n  }, 1000);\n}\n\nshowChromeExtensionStatus(); // via: https://bugs.chromium.org/p/chromium/issues/detail?id=487935#c17\n// you can capture screen on Android Chrome >= 55 with flag: \"Experimental ScreenCapture android\"\n\nwindow.IsAndroidChrome = false;\n\ntry {\n  if (navigator.userAgent.toLowerCase().indexOf(\"android\") > -1 && /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor)) {\n    window.IsAndroidChrome = true;\n  }\n} catch (e) {}\n\nvar onCaptureScreen = function onCaptureScreen() {\n  console.log(\"2\");\n  document.getElementById(\"capture-screen\").disabled = true;\n  setTimeout(function () {\n    if (document.getElementById(\"capture-screen\").disabled && !document.querySelector(\"video\").src) {\n      document.getElementById(\"capture-screen\").disabled = false;\n    }\n  }, 5000); // edge 17 or higher\n\n  if (navigator.userAgent.indexOf(\"Edge\") !== -1 && (!!navigator.msSaveOrOpenBlob || !!navigator.msSaveBlob)) {\n    navigator.getDisplayMedia(window.screen_constraints).then(function (stream) {\n      document.querySelector(\"video\").srcObject = stream;\n    }, function (error) {\n      alert(\"Please make sure to use Edge 17 or higher.\");\n    });\n    return;\n  }\n\n  var getScreenId = function getScreenId(error, sourceId, screen_constraints) {\n    // error    == null || 'permission-denied' || 'not-installed' || 'installed-disabled' || 'not-chrome'\n    // sourceId == null || 'string' || 'firefox'\n    // getUserMedia(screen_constraints, onSuccess, onFailure);\n    document.getElementById(\"capture-screen\").disabled = false;\n\n    if (window.IsAndroidChrome) {\n      screen_constraints = {\n        mandatory: {\n          chromeMediaSource: \"screen\"\n        },\n        optional: []\n      };\n      screen_constraints = {\n        video: screen_constraints\n      };\n      error = null;\n    }\n\n    if (error == \"not-installed\") {\n      alert(\"Please install Chrome extension. See the link below.\");\n      return;\n    }\n\n    if (error == \"installed-disabled\") {\n      alert('Please install or enable Chrome extension. Please check \"chrome://extensions\" page.');\n      return;\n    }\n\n    if (error == \"permission-denied\") {\n      alert(\"Please make sure you are using HTTPs. Because HTTPs is required.\");\n      return;\n    }\n\n    console.info(\"getScreenId callback \\n(error, sourceId, screen_constraints) =>\\n\", error, sourceId, screen_constraints);\n    document.getElementById(\"capture-screen\").disabled = true;\n    navigator.mediaDevices.getUserMedia(screen_constraints).then(function (stream) {\n      // share this \"MediaStream\" object using RTCPeerConnection API\n      document.querySelector(\"video\").srcObject = stream;\n\n      stream.oninactive = stream.onended = function () {\n        document.querySelector(\"video\").src = null;\n        document.getElementById(\"capture-screen\").disabled = false;\n      };\n\n      document.getElementById(\"capture-screen\").disabled = false;\n    }).catch(function (error) {\n      console.error(\"getScreenId error\", error);\n      alert(\"Failed to capture your screen. Please check Chrome console logs for further information.\");\n    });\n  };\n  /*, ['screen', 'audio']*/\n\n};\n\nexport var test =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(test, _Component);\n\n  function test() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, test);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(test)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.divStyle = {\n      width: \"100%\",\n      backgroundRepeat: \"no-repeat\",\n      backgroundSize: \"100%\",\n      backgroundImage: \"url(https://lh5.googleusercontent.com/6U-gmL_hG9bbquDZdW_ajiA-1bgkfSlHOkzR24aigkyPQzXWXNoRNfyLjXS3rqV92iwq395JSQ=s640-h400-e365-rw)\"\n    };\n    return _this;\n  }\n\n  _createClass(test, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var script = document.createElement(\"script\");\n      script.src = \"https://cdn.webrtc-experiment.com/getScreenId.js\";\n      script.src = \"https://webrtc.github.io/adapter/adapter-latest.js\";\n      script.async = true;\n      document.body.appendChild(script); ///\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"experiment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"chrome-extension-status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }), \">\", React.createElement(\"button\", {\n        id: \"capture-screen\",\n        onClick: onCaptureScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"\\uD654\\uBA74 \\uACF5\\uC720 \\uC2DC\\uC791\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }), React.createElement(\"video\", {\n        controls: true,\n        autoplay: true,\n        playsinline: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return test;\n}(Component);\nexport default test;","map":{"version":3,"sources":["C:\\React\\react-gradu\\src\\components\\independent\\webRTCRoom\\test.js"],"names":["React","Component","maxTries","showChromeExtensionStatus","window","getChromeExtensionStatus","gotResponse","status","document","getElementById","innerHTML","console","info","setTimeout","IsAndroidChrome","navigator","userAgent","toLowerCase","indexOf","test","vendor","e","onCaptureScreen","log","disabled","querySelector","src","msSaveOrOpenBlob","msSaveBlob","getDisplayMedia","screen_constraints","then","stream","srcObject","error","alert","getScreenId","sourceId","mandatory","chromeMediaSource","optional","video","mediaDevices","getUserMedia","oninactive","onended","catch","divStyle","width","backgroundRepeat","backgroundSize","backgroundImage","script","createElement","async","body","appendChild"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nvar maxTries = 0;\r\nfunction showChromeExtensionStatus() {\r\n  if (typeof window.getChromeExtensionStatus !== \"function\") return;\r\n\r\n  var gotResponse;\r\n  window.getChromeExtensionStatus(function(status) {\r\n    gotResponse = true;\r\n    document.getElementById(\"chrome-extension-status\").innerHTML =\r\n      \"Chrome extension status is: <b>\" + status + \"</b>\";\r\n    console.info(\"getChromeExtensionStatus\", status);\r\n  });\r\n\r\n  maxTries++;\r\n  if (maxTries > 15) return;\r\n  setTimeout(function() {\r\n    if (!gotResponse) showChromeExtensionStatus();\r\n  }, 1000);\r\n}\r\n\r\nshowChromeExtensionStatus();\r\n\r\n// via: https://bugs.chromium.org/p/chromium/issues/detail?id=487935#c17\r\n// you can capture screen on Android Chrome >= 55 with flag: \"Experimental ScreenCapture android\"\r\nwindow.IsAndroidChrome = false;\r\ntry {\r\n  if (\r\n    navigator.userAgent.toLowerCase().indexOf(\"android\") > -1 &&\r\n    /Chrome/.test(navigator.userAgent) &&\r\n    /Google Inc/.test(navigator.vendor)\r\n  ) {\r\n    window.IsAndroidChrome = true;\r\n  }\r\n} catch (e) {}\r\n\r\nconst onCaptureScreen = () => {\r\n  console.log(\"2\");\r\n  document.getElementById(\"capture-screen\").disabled = true;\r\n  setTimeout(function() {\r\n    if (\r\n      document.getElementById(\"capture-screen\").disabled &&\r\n      !document.querySelector(\"video\").src\r\n    ) {\r\n      document.getElementById(\"capture-screen\").disabled = false;\r\n    }\r\n  }, 5000);\r\n  // edge 17 or higher\r\n  if (\r\n    navigator.userAgent.indexOf(\"Edge\") !== -1 &&\r\n    (!!navigator.msSaveOrOpenBlob || !!navigator.msSaveBlob)\r\n  ) {\r\n    navigator.getDisplayMedia(window.screen_constraints).then(\r\n      stream => {\r\n        document.querySelector(\"video\").srcObject = stream;\r\n      },\r\n      error => {\r\n        alert(\"Please make sure to use Edge 17 or higher.\");\r\n      }\r\n    );\r\n    return;\r\n  }\r\n  const getScreenId = (error, sourceId, screen_constraints) => {\r\n    // error    == null || 'permission-denied' || 'not-installed' || 'installed-disabled' || 'not-chrome'\r\n    // sourceId == null || 'string' || 'firefox'\r\n    // getUserMedia(screen_constraints, onSuccess, onFailure);\r\n    document.getElementById(\"capture-screen\").disabled = false;\r\n    if (window.IsAndroidChrome) {\r\n      screen_constraints = {\r\n        mandatory: {\r\n          chromeMediaSource: \"screen\"\r\n        },\r\n        optional: []\r\n      };\r\n\r\n      screen_constraints = {\r\n        video: screen_constraints\r\n      };\r\n      error = null;\r\n    }\r\n    if (error == \"not-installed\") {\r\n      alert(\"Please install Chrome extension. See the link below.\");\r\n      return;\r\n    }\r\n    if (error == \"installed-disabled\") {\r\n      alert(\r\n        'Please install or enable Chrome extension. Please check \"chrome://extensions\" page.'\r\n      );\r\n      return;\r\n    }\r\n    if (error == \"permission-denied\") {\r\n      alert(\"Please make sure you are using HTTPs. Because HTTPs is required.\");\r\n      return;\r\n    }\r\n    console.info(\r\n      \"getScreenId callback \\n(error, sourceId, screen_constraints) =>\\n\",\r\n      error,\r\n      sourceId,\r\n      screen_constraints\r\n    );\r\n    document.getElementById(\"capture-screen\").disabled = true;\r\n    navigator.mediaDevices\r\n      .getUserMedia(screen_constraints)\r\n      .then(function(stream) {\r\n        // share this \"MediaStream\" object using RTCPeerConnection API\r\n        document.querySelector(\"video\").srcObject = stream;\r\n        stream.oninactive = stream.onended = function() {\r\n          document.querySelector(\"video\").src = null;\r\n          document.getElementById(\"capture-screen\").disabled = false;\r\n        };\r\n        document.getElementById(\"capture-screen\").disabled = false;\r\n      })\r\n      .catch(function(error) {\r\n        console.error(\"getScreenId error\", error);\r\n        alert(\r\n          \"Failed to capture your screen. Please check Chrome console logs for further information.\"\r\n        );\r\n      });\r\n  }; /*, ['screen', 'audio']*/\r\n};\r\n\r\nexport class test extends Component {\r\n  componentWillMount() {\r\n    const script = document.createElement(\"script\");\r\n\r\n    script.src = \"https://cdn.webrtc-experiment.com/getScreenId.js\";\r\n    script.src = \"https://webrtc.github.io/adapter/adapter-latest.js\";\r\n\r\n    script.async = true;\r\n\r\n    document.body.appendChild(script);\r\n\r\n    ///\r\n  }\r\n\r\n  divStyle = {\r\n    width: \"100%\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"100%\",\r\n    backgroundImage:\r\n      \"url(https://lh5.googleusercontent.com/6U-gmL_hG9bbquDZdW_ajiA-1bgkfSlHOkzR24aigkyPQzXWXNoRNfyLjXS3rqV92iwq395JSQ=s640-h400-e365-rw)\"\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div class=\"experiment\" />\r\n        <div id=\"chrome-extension-status\" />\r\n        <br />>\r\n        <button id=\"capture-screen\" onClick={onCaptureScreen}>\r\n          화면 공유 시작\r\n        </button>\r\n        <hr />\r\n        <video controls autoplay playsinline />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default test;\r\n"]},"metadata":{},"sourceType":"module"}