{"ast":null,"code":"import _classCallCheck from \"C:\\\\React\\\\react-gradu\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\React\\\\react-gradu\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\React\\\\react-gradu\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\React\\\\react-gradu\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\React\\\\react-gradu\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"C:\\\\React\\\\react-gradu\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\React\\\\react-gradu\\\\src\\\\components\\\\independent\\\\webRTCRoom\\\\STTTest.jsx\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  display: block;\\n  margin-left: 100px;\\n  margin-top: 0px;\\n  width: 16px;\\n  height: 16px;\\n  background: none;\\n  border: none;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  font-size: 12px;\\n  height: 31px;\\n  padding-left: 13px;\\n  padding-top: 5px;\\n  color: var(--brownish-grey);\\n  display: flex;\\n  flex-direction: row;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport topicCheckOff from \"../../../assets/conferenceRoom/videohome_check_off.png\"; // import webkitSpeechRecognition from \"react-speech-recognition\";\n// TODO: 내 이름은 권소영. 이제 내가 변경한 것은 TODO로 표현하겠다.\n\nimport io from \"socket.io-client\";\nvar TopicItem = styled.div(_templateObject());\nvar TopicButton = styled.button(_templateObject2());\nvar topics = [React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}, React.createElement(TopicItem, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, \"\\uCCAB \\uBC88\\uC9F8 \\uD1A0\\uD53D\", React.createElement(TopicButton, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}, React.createElement(\"img\", {\n  src: topicCheckOff,\n  width: \"16px\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}))), React.createElement(\"hr\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}))];\nvar records = [React.createElement(React.Fragment, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n}, React.createElement(\"textarea\", {\n  value: \"\",\n  type: \"textarea\",\n  wrap: \"soft\",\n  id: \"stt-message\",\n  disabled: \"true\",\n  cols: \"37\",\n  rows: \"10\",\n  style: {\n    fontSize: \"12px\",\n    paddingTop: \"29px\",\n    paddingLeft: \"18px\",\n    paddingBottom: \"22px\"\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n}), React.createElement(\"hr\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57\n  },\n  __self: this\n})))]; //--------------------------------------------------------\n//-----------------Speech Recognition Code----------------\n//--------------------------------------------------------\n\nvar isRecognizing = false;\nvar ignoreEndProcess = false;\nvar finalTranscript = \"\";\nwindow.SpeechRecognition = window.webkitSpeechRecognition || window.SpeechRecognition;\nvar recognition = new window.webkitSpeechRecognition();\nvar language = \"ko-KR\";\nrecognition.continuous = true; // 음성이 인식될 때마다 결과값 반환\n\nrecognition.interimResults = true; // 끝나지 않은 상태의 음성 반환 설정\n\n/** stt 인식 시작 */\n\nrecognition.onstart = function () {\n  console.log(\"onstart\", arguments);\n  isRecognizing = true;\n};\n/** stt 인식 종료 */\n\n\nrecognition.onend = function () {\n  console.log(\"onend\", arguments);\n  isRecognizing = false;\n\n  if (ignoreEndProcess) {\n    return false;\n  }\n\n  if (!finalTranscript) {\n    console.log(\"empty finalTranscript\");\n    return false;\n  }\n};\n/** 인식된 결과 처리 */\n\n\nrecognition.onresult = function (event) {\n  console.log(\"onresult\", event);\n  var interimTranscript = \"\";\n\n  if (typeof event.results === \"undefined\") {\n    recognition.onend = null;\n    recognition.stop();\n    return;\n  }\n\n  for (var i = event.resultIndex; i < event.results.length; ++i) {\n    if (event.results[i].isFinal) {\n      // TODO: 소켓서버로 인식된 결과 문장 전송\n      sender(event.results[i][0].transcript);\n    } else {\n      interimTranscript += event.results[i][0].transcript;\n    }\n  }\n\n  console.log(\"finalTranscript\", finalTranscript);\n  console.log(\"interimTranscript\", interimTranscript);\n};\n/** 에러 처리 */\n\n\nrecognition.onerror = function (event) {\n  console.log(\"onerror\", event);\n\n  if (event.error.match(/no-speech|audio-capture|not-allowed/)) {\n    ignoreEndProcess = true;\n  }\n};\n/** Button Handler */\n\n\nvar onJoin = function onJoin() {\n  if (isRecognizing) {\n    alert(\"이미 참여 중입니다.\");\n    return;\n  }\n\n  recognition.lang = language;\n  recognition.start();\n  ignoreEndProcess = false;\n  finalTranscript = \"\";\n};\n\nvar onExit = function onExit() {\n  if (isRecognizing) {\n    recognition.stop();\n    return;\n  }\n}; //--------------------------------------------------------\n//-----------------Send to socket.io Server---------------\n//--------------------------------------------------------\n\n\nvar serverURL = \"localhost:50000\";\nvar name = \"me\";\nvar room = \"100\";\nvar socket = null;\nvar chatLogs = \"\"; // TODO: 인식된 메시지 프론트에 기록\n\nfunction writeMessage(type, name, message) {\n  console.log(\"[채팅방 기록]: \" + message);\n  var printName = \"\";\n\n  if (type === \"me\") {\n    printName = name + \":\";\n  }\n\n  chatLogs += \"\\n\" + printName + message;\n  document.getElementById(\"stt-message\").value = chatLogs;\n}\n\nfunction sender(text) {\n  socket.emit(\"user\", {\n    name: name,\n    message: text\n  });\n  writeMessage(\"me\", name, text);\n}\n\nexport var STTTest =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(STTTest, _Component);\n\n  function STTTest() {\n    _classCallCheck(this, STTTest);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(STTTest).apply(this, arguments));\n  }\n\n  _createClass(STTTest, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var script = document.createElement(\"script\");\n      script.src = \"http://cdn.socket.io/socket.io-1.4.0.js\"; //$(document).ready(function() {\n\n      socket = io.connect(serverURL);\n      socket.on(\"connection\", function (data) {\n        console.log(\"connect\");\n\n        if (data.type === \"connected\") {\n          socket.emit(\"connection\", {\n            type: \"join\",\n            name: name,\n            room: room\n          });\n        }\n      });\n      socket.on(\"system\", function (data) {\n        writeMessage(\"system\", \"system\", data.message);\n      });\n      socket.on(\"message\", function (data) {\n        writeMessage(\"other\", data.name, data.message);\n      }); //});\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        style: {\n          background: \"var(--white-five)\",\n          width: \"252px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"test\",\n        style: {\n          backgroundColor: \"var(--white-five)\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          color: \"var(--greenish-teal)\",\n          fontSize: \"16px\",\n          background: \"var(--white-five)\",\n          height: \"28px\",\n          paddingLeft: \"13px\",\n          paddingTop: \"5px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, \"\\uBA54\\uC778 \\uD1A0\\uD53D\"), React.createElement(\"div\", {\n        style: {\n          height: \"125px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, topics, topics, topics)), React.createElement(\"div\", {\n        style: {\n          color: \"var(--greenish-teal)\",\n          fontSize: \"16px\",\n          background: \"var(--white-five)\",\n          height: \"28px\",\n          paddingLeft: \"13px\",\n          paddingTop: \"5px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, \"\\uC2E4\\uC2DC\\uAC04 \\uD68C\\uC758 \\uAE30\\uB85D\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, records)), React.createElement(\"section\", {\n        className: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"button-panel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        id: \"btnJoin\",\n        onClick: onJoin,\n        className: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, \"Join\"), React.createElement(\"button\", {\n        id: \"btnExit\",\n        onClick: onExit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, \"Exit\"))));\n    }\n  }]);\n\n  return STTTest;\n}(Component);\nexport default STTTest;","map":{"version":3,"sources":["C:\\React\\react-gradu\\src\\components\\independent\\webRTCRoom\\STTTest.jsx"],"names":["React","Component","styled","topicCheckOff","io","TopicItem","div","TopicButton","button","topics","records","fontSize","paddingTop","paddingLeft","paddingBottom","isRecognizing","ignoreEndProcess","finalTranscript","window","SpeechRecognition","webkitSpeechRecognition","recognition","language","continuous","interimResults","onstart","console","log","arguments","onend","onresult","event","interimTranscript","results","stop","i","resultIndex","length","isFinal","sender","transcript","onerror","error","match","onJoin","alert","lang","start","onExit","serverURL","name","room","socket","chatLogs","writeMessage","type","message","printName","document","getElementById","value","text","emit","STTTest","script","createElement","src","connect","on","data","background","width","backgroundColor","color","height"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport topicCheckOff from \"../../../assets/conferenceRoom/videohome_check_off.png\";\r\n// import webkitSpeechRecognition from \"react-speech-recognition\";\r\n\r\n// TODO: 내 이름은 권소영. 이제 내가 변경한 것은 TODO로 표현하겠다.\r\nimport io from \"socket.io-client\";\r\n\r\nconst TopicItem = styled.div`\r\n  font-size: 12px;\r\n  height: 31px;\r\n  padding-left: 13px;\r\n  padding-top: 5px;\r\n  color: var(--brownish-grey);\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\nconst TopicButton = styled.button`\r\n  display: block;\r\n  margin-left: 100px;\r\n  margin-top: 0px;\r\n  width: 16px;\r\n  height: 16px;\r\n  background: none;\r\n  border: none;\r\n`;\r\nconst topics = [\r\n  <div>\r\n    <TopicItem>\r\n      첫 번째 토픽\r\n      <TopicButton>\r\n        <img src={topicCheckOff} width=\"16px\" />\r\n      </TopicButton>\r\n    </TopicItem>\r\n    <hr />\r\n  </div>\r\n];\r\nconst records = [\r\n  <React.Fragment>\r\n    <div>\r\n      <textarea\r\n        value=\"\"\r\n        type=\"textarea\"\r\n        wrap=\"soft\"\r\n        id=\"stt-message\"\r\n        disabled=\"true\"\r\n        cols=\"37\"\r\n        rows=\"10\"\r\n        style={{\r\n          fontSize: \"12px\",\r\n          paddingTop: \"29px\",\r\n          paddingLeft: \"18px\",\r\n          paddingBottom: \"22px\"\r\n        }}\r\n      />\r\n\r\n      <hr />\r\n    </div>\r\n  </React.Fragment>\r\n];\r\n\r\n//--------------------------------------------------------\r\n//-----------------Speech Recognition Code----------------\r\n//--------------------------------------------------------\r\n\r\nvar isRecognizing = false;\r\nvar ignoreEndProcess = false;\r\nvar finalTranscript = \"\";\r\n\r\nwindow.SpeechRecognition =\r\n  window.webkitSpeechRecognition || window.SpeechRecognition;\r\n\r\nvar recognition = new window.webkitSpeechRecognition();\r\nconst language = \"ko-KR\";\r\nrecognition.continuous = true; // 음성이 인식될 때마다 결과값 반환\r\nrecognition.interimResults = true; // 끝나지 않은 상태의 음성 반환 설정\r\n/** stt 인식 시작 */\r\nrecognition.onstart = function() {\r\n  console.log(\"onstart\", arguments);\r\n  isRecognizing = true;\r\n};\r\n/** stt 인식 종료 */\r\nrecognition.onend = function() {\r\n  console.log(\"onend\", arguments);\r\n  isRecognizing = false;\r\n\r\n  if (ignoreEndProcess) {\r\n    return false;\r\n  }\r\n\r\n  if (!finalTranscript) {\r\n    console.log(\"empty finalTranscript\");\r\n    return false;\r\n  }\r\n};\r\n/** 인식된 결과 처리 */\r\nrecognition.onresult = function(event) {\r\n  console.log(\"onresult\", event);\r\n\r\n  let interimTranscript = \"\";\r\n  if (typeof event.results === \"undefined\") {\r\n    recognition.onend = null;\r\n    recognition.stop();\r\n    return;\r\n  }\r\n\r\n  for (let i = event.resultIndex; i < event.results.length; ++i) {\r\n    if (event.results[i].isFinal) {\r\n      // TODO: 소켓서버로 인식된 결과 문장 전송\r\n      sender(event.results[i][0].transcript);\r\n    } else {\r\n      interimTranscript += event.results[i][0].transcript;\r\n    }\r\n  }\r\n\r\n  console.log(\"finalTranscript\", finalTranscript);\r\n  console.log(\"interimTranscript\", interimTranscript);\r\n};\r\n/** 에러 처리 */\r\nrecognition.onerror = function(event) {\r\n  console.log(\"onerror\", event);\r\n\r\n  if (event.error.match(/no-speech|audio-capture|not-allowed/)) {\r\n    ignoreEndProcess = true;\r\n  }\r\n};\r\n/** Button Handler */\r\nconst onJoin = () => {\r\n  if (isRecognizing) {\r\n    alert(\"이미 참여 중입니다.\");\r\n    return;\r\n  }\r\n\r\n  recognition.lang = language;\r\n  recognition.start();\r\n  ignoreEndProcess = false;\r\n\r\n  finalTranscript = \"\";\r\n};\r\nconst onExit = () => {\r\n  if (isRecognizing) {\r\n    recognition.stop();\r\n    return;\r\n  }\r\n};\r\n\r\n//--------------------------------------------------------\r\n//-----------------Send to socket.io Server---------------\r\n//--------------------------------------------------------\r\n\r\nvar serverURL = \"localhost:50000\";\r\nvar name = \"me\";\r\nvar room = \"100\";\r\nvar socket = null;\r\n\r\nvar chatLogs = \"\";\r\n\r\n// TODO: 인식된 메시지 프론트에 기록\r\nfunction writeMessage(type, name, message) {\r\n  console.log(\"[채팅방 기록]: \" + message);\r\n\r\n  var printName = \"\";\r\n  if (type === \"me\") {\r\n    printName = name + \":\";\r\n  }\r\n\r\n  chatLogs += \"\\n\" + printName + message;\r\n\r\n  document.getElementById(\"stt-message\").value = chatLogs;\r\n}\r\n\r\nfunction sender(text) {\r\n  socket.emit(\"user\", {\r\n    name: name,\r\n    message: text\r\n  });\r\n  writeMessage(\"me\", name, text);\r\n}\r\n\r\nexport class STTTest extends Component {\r\n  componentWillMount() {\r\n    const script = document.createElement(\"script\");\r\n\r\n    script.src = \"http://cdn.socket.io/socket.io-1.4.0.js\";\r\n\r\n    //$(document).ready(function() {\r\n    socket = io.connect(serverURL);\r\n    socket.on(\"connection\", function(data) {\r\n      console.log(\"connect\");\r\n      if (data.type === \"connected\") {\r\n        socket.emit(\"connection\", {\r\n          type: \"join\",\r\n          name: name,\r\n          room: room\r\n        });\r\n      }\r\n    });\r\n    socket.on(\"system\", function(data) {\r\n      writeMessage(\"system\", \"system\", data.message);\r\n    });\r\n    socket.on(\"message\", function(data) {\r\n      writeMessage(\"other\", data.name, data.message);\r\n    });\r\n    //});\r\n  }\r\n  render() {\r\n    return (\r\n      <div style={{ background: \"var(--white-five)\", width: \"252px\" }}>\r\n        <div className=\"test\" style={{ backgroundColor: \"var(--white-five)\" }}>\r\n          <div>\r\n            <div\r\n              style={{\r\n                color: \"var(--greenish-teal)\",\r\n                fontSize: \"16px\",\r\n                background: \"var(--white-five)\",\r\n                height: \"28px\",\r\n                paddingLeft: \"13px\",\r\n                paddingTop: \"5px\"\r\n              }}\r\n            >\r\n              메인 토픽\r\n            </div>\r\n            <div style={{ height: \"125px\" }}>\r\n              {topics}\r\n              {topics}\r\n              {topics}\r\n            </div>\r\n          </div>\r\n          <div\r\n            style={{\r\n              color: \"var(--greenish-teal)\",\r\n              fontSize: \"16px\",\r\n              background: \"var(--white-five)\",\r\n              height: \"28px\",\r\n              paddingLeft: \"13px\",\r\n              paddingTop: \"5px\"\r\n            }}\r\n          >\r\n            실시간 회의 기록\r\n          </div>\r\n          <div>{records}</div>\r\n        </div>\r\n        {/* 여기서부터 STT코드 */}\r\n        <section className=\"center\">\r\n          <div className=\"button-panel\">\r\n            <button id=\"btnJoin\" onClick={onJoin} className=\"off\">\r\n              Join\r\n            </button>\r\n            <button id=\"btnExit\" onClick={onExit}>\r\n              Exit\r\n            </button>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default STTTest;\r\n"]},"metadata":{},"sourceType":"module"}