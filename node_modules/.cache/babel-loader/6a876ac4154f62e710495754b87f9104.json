{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport { ConfigConsumer } from '../config-provider';\nimport Icon from '../icon';\nimport classnames from 'classnames';\nimport Divider from '../divider';\nimport Breadcrumb from '../breadcrumb';\nimport TransButton from '../_util/transButton';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\n\nvar renderBack = function renderBack(prefixCls, backIcon, onBack) {\n  if (!backIcon || !onBack) {\n    return null;\n  }\n\n  return React.createElement(LocaleReceiver, {\n    componentName: \"PageHeader\"\n  }, function (_ref) {\n    var back = _ref.back;\n    return React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-back\")\n    }, React.createElement(TransButton, {\n      onClick: function onClick(e) {\n        if (onBack) {\n          onBack(e);\n        }\n      },\n      className: \"\".concat(prefixCls, \"-back-button\"),\n      \"aria-label\": back\n    }, backIcon), React.createElement(Divider, {\n      type: \"vertical\"\n    }));\n  });\n};\n\nvar renderBreadcrumb = function renderBreadcrumb(breadcrumb) {\n  return React.createElement(Breadcrumb, breadcrumb);\n};\n\nvar renderHeader = function renderHeader(prefixCls, props) {\n  var breadcrumb = props.breadcrumb,\n      backIcon = props.backIcon,\n      onBack = props.onBack;\n\n  if (breadcrumb && breadcrumb.routes && breadcrumb.routes.length >= 2) {\n    return renderBreadcrumb(breadcrumb);\n  }\n\n  return renderBack(prefixCls, backIcon, onBack);\n};\n\nvar renderTitle = function renderTitle(prefixCls, props) {\n  var title = props.title,\n      subTitle = props.subTitle,\n      tags = props.tags,\n      extra = props.extra;\n  var titlePrefixCls = \"\".concat(prefixCls, \"-title-view\");\n\n  if (title || subTitle || tags || extra) {\n    return React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-title-view\")\n    }, title && React.createElement(\"span\", {\n      className: \"\".concat(titlePrefixCls, \"-title\")\n    }, title), subTitle && React.createElement(\"span\", {\n      className: \"\".concat(titlePrefixCls, \"-sub-title\")\n    }, subTitle), tags && React.createElement(\"span\", {\n      className: \"\".concat(titlePrefixCls, \"-tags\")\n    }, tags), extra && React.createElement(\"span\", {\n      className: \"\".concat(titlePrefixCls, \"-extra\")\n    }, extra));\n  }\n\n  return null;\n};\n\nvar renderFooter = function renderFooter(prefixCls, footer) {\n  if (footer) {\n    return React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-footer\")\n    }, footer);\n  }\n\n  return null;\n};\n\nvar PageHeader = function PageHeader(props) {\n  return React.createElement(ConfigConsumer, null, function (_ref2) {\n    var getPrefixCls = _ref2.getPrefixCls;\n    var customizePrefixCls = props.prefixCls,\n        style = props.style,\n        footer = props.footer,\n        children = props.children,\n        customizeClassName = props.className;\n    var prefixCls = getPrefixCls('page-header', customizePrefixCls);\n    var className = classnames(prefixCls, _defineProperty({}, \"\".concat(prefixCls, \"-has-footer\"), footer), customizeClassName);\n    return React.createElement(\"div\", {\n      className: className,\n      style: style\n    }, renderHeader(prefixCls, props), renderTitle(prefixCls, props), children && React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-content-view\")\n    }, children), renderFooter(prefixCls, footer));\n  });\n};\n\nPageHeader.defaultProps = {\n  backIcon: React.createElement(Icon, {\n    type: \"arrow-left\"\n  })\n};\nexport default PageHeader;","map":null,"metadata":{},"sourceType":"module"}