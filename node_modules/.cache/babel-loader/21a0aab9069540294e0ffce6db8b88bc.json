{"ast":null,"code":"import _classCallCheck from \"C:\\\\React\\\\react-gradu\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\React\\\\react-gradu\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\React\\\\react-gradu\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\React\\\\react-gradu\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\React\\\\react-gradu\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\React\\\\react-gradu\\\\src\\\\components\\\\independent\\\\webRTCRoom\\\\UserArea.jsx\";\n\nimport React, { Component } from \"react\";\nimport \"./webrtc.style.css\";\nvar predefinedRoomId = \"Choyoonyoung\";\nvar connection = new window.RTCMultiConnection(); // this line is VERY_important\n\nconnection.socketURL = \"https://rtcmulticonnection.herokuapp.com:443/\"; // if you want audio+video conferencing\n\nconnection.session = {\n  audio: true,\n  video: true\n};\nconnection.sdpConstraints.mandatory = {\n  OfferToReceiveAudio: true,\n  OfferToReceiveVideo: true\n}; // FIXME:아래 onstream을 제거하면 잘 돌아가지만, 추가하면서 화면이 띄워지지 않는 현상이 벌어짐.\n// const afterRemoteStreamStartedFlowing = e => {\n//   document.body.appendChild(e.mediaElement);\n// };\n// connection.str = e => {\n//   // var video = event.mediaElement;\n//   // if (event.type === \"local\") {\n//   //   localVideosContainer.appendChild(video);\n//   //   console.log(\"local\");\n//   // } else if (event.type === \"remote\") {\n//   //   remoteVideosContainer.appendChild(video);\n//   //   console.log(\"remote\");\n//   // } else {\n//   //   console.log(\"nothing\");\n//   // }\n//   waitUntilRemoteStreamStartsFlowing(this.mediaElement, e);\n// };\n// const waitUntilRemoteStreamStartsFlowing = (mediaElement, e) => {\n//   // chrome for android may have some features missing\n//   if (connection.DetectRTC.isMobileDevice) {\n//     return afterRemoteStreamStartedFlowing(e);\n//   }\n//   if (!mediaElement.numberOfTimes) mediaElement.numberOfTimes = 0;\n//   mediaElement.numberOfTimes++;\n//   if (\n//     !(\n//       mediaElement.readyState <= HTMLMediaElement.HAVE_CURRENT_DATA ||\n//       mediaElement.paused ||\n//       mediaElement.currentTime <= 0\n//     )\n//   ) {\n//     return afterRemoteStreamStartedFlowing(e);\n//   }\n//   if (mediaElement.numberOfTimes >= 60) {\n//     // wait 60 seconds while video is delivered!\n//     throw \"Failed receiving remote video.\";\n//   }\n//   setTimeout(function() {\n//     waitUntilRemoteStreamStartsFlowing(mediaElement, e);\n//   }, 900);\n// };\n\nvar join = function join(e) {\n  _this.disabled = true;\n  connection.openOrJoin(e.target.value || predefinedRoomId);\n};\n\nvar localVideosContainer = document.getElementById(\"local-videos-container\");\nvar remoteVideosContainer = document.getElementById(\"remote-videos-container\");\nexport var UserArea =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UserArea, _Component);\n\n  function UserArea() {\n    var _getPrototypeOf2;\n\n    var _this2;\n\n    _classCallCheck(this, UserArea);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UserArea)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this2.state = {\n      roomId: \"100\"\n    };\n    return _this2;\n  }\n\n  _createClass(UserArea, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var script = document.createElement(\"script\");\n      script.src = \"https://cdn.webrtc-experiment.com/RTCMultiConnection.js\";\n      script.src = \"https://cdn.webrtc-experiment.com/conversation.js\";\n      script.src = \"https://rtcmulticonnection.herokuapp.com/dist/RTCMultiConnection.min.js\";\n      script.src = \"https://rtcmulticonnection.herokuapp.com/socket.io/socket.io.js\";\n      script.async = true;\n      document.body.appendChild(script);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var roomid = document.getElementById(\"txt-roomid\");\n      roomid.value = connection.token();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        class: \"webrtc-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"txt-roomid\",\n        placeholder: \" Unique Room ID\",\n        value: this.state.roodId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        id: \"btn-open-or-join-room\",\n        onClick: join,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Join button\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"local-videos-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"remote-videos-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return UserArea;\n}(Component);\nexport default UserArea;","map":{"version":3,"sources":["C:\\React\\react-gradu\\src\\components\\independent\\webRTCRoom\\UserArea.jsx"],"names":["React","Component","predefinedRoomId","connection","window","RTCMultiConnection","socketURL","session","audio","video","sdpConstraints","mandatory","OfferToReceiveAudio","OfferToReceiveVideo","join","e","disabled","openOrJoin","target","value","localVideosContainer","document","getElementById","remoteVideosContainer","UserArea","state","roomId","script","createElement","src","async","body","appendChild","roomid","token","roodId"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./webrtc.style.css\";\r\n\r\nvar predefinedRoomId = \"Choyoonyoung\";\r\nvar connection = new window.RTCMultiConnection();\r\n\r\n// this line is VERY_important\r\nconnection.socketURL = \"https://rtcmulticonnection.herokuapp.com:443/\";\r\n// if you want audio+video conferencing\r\nconnection.session = {\r\n  audio: true,\r\n  video: true\r\n};\r\n\r\nconnection.sdpConstraints.mandatory = {\r\n  OfferToReceiveAudio: true,\r\n  OfferToReceiveVideo: true\r\n};\r\n\r\n// FIXME:아래 onstream을 제거하면 잘 돌아가지만, 추가하면서 화면이 띄워지지 않는 현상이 벌어짐.\r\n// const afterRemoteStreamStartedFlowing = e => {\r\n//   document.body.appendChild(e.mediaElement);\r\n// };\r\n// connection.str = e => {\r\n//   // var video = event.mediaElement;\r\n//   // if (event.type === \"local\") {\r\n//   //   localVideosContainer.appendChild(video);\r\n//   //   console.log(\"local\");\r\n//   // } else if (event.type === \"remote\") {\r\n//   //   remoteVideosContainer.appendChild(video);\r\n//   //   console.log(\"remote\");\r\n//   // } else {\r\n//   //   console.log(\"nothing\");\r\n//   // }\r\n//   waitUntilRemoteStreamStartsFlowing(this.mediaElement, e);\r\n// };\r\n\r\n// const waitUntilRemoteStreamStartsFlowing = (mediaElement, e) => {\r\n//   // chrome for android may have some features missing\r\n//   if (connection.DetectRTC.isMobileDevice) {\r\n//     return afterRemoteStreamStartedFlowing(e);\r\n//   }\r\n\r\n//   if (!mediaElement.numberOfTimes) mediaElement.numberOfTimes = 0;\r\n//   mediaElement.numberOfTimes++;\r\n\r\n//   if (\r\n//     !(\r\n//       mediaElement.readyState <= HTMLMediaElement.HAVE_CURRENT_DATA ||\r\n//       mediaElement.paused ||\r\n//       mediaElement.currentTime <= 0\r\n//     )\r\n//   ) {\r\n//     return afterRemoteStreamStartedFlowing(e);\r\n//   }\r\n\r\n//   if (mediaElement.numberOfTimes >= 60) {\r\n//     // wait 60 seconds while video is delivered!\r\n//     throw \"Failed receiving remote video.\";\r\n//   }\r\n\r\n//   setTimeout(function() {\r\n//     waitUntilRemoteStreamStartsFlowing(mediaElement, e);\r\n//   }, 900);\r\n// };\r\n\r\nconst join = e => {\r\n  this.disabled = true;\r\n  connection.openOrJoin(e.target.value || predefinedRoomId);\r\n};\r\n\r\nvar localVideosContainer = document.getElementById(\"local-videos-container\");\r\n\r\nvar remoteVideosContainer = document.getElementById(\"remote-videos-container\");\r\nexport class UserArea extends Component {\r\n  state = {\r\n    roomId: \"100\"\r\n  };\r\n\r\n  componentWillMount() {\r\n    const script = document.createElement(\"script\");\r\n\r\n    script.src = \"https://cdn.webrtc-experiment.com/RTCMultiConnection.js\";\r\n    script.src = \"https://cdn.webrtc-experiment.com/conversation.js\";\r\n    script.src =\r\n      \"https://rtcmulticonnection.herokuapp.com/dist/RTCMultiConnection.min.js\";\r\n    script.src =\r\n      \"https://rtcmulticonnection.herokuapp.com/socket.io/socket.io.js\";\r\n\r\n    script.async = true;\r\n\r\n    document.body.appendChild(script);\r\n  }\r\n\r\n  componentDidMount() {\r\n    var roomid = document.getElementById(\"txt-roomid\");\r\n\r\n    roomid.value = connection.token();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"webrtc-container\">\r\n        <input\r\n          id=\"txt-roomid\"\r\n          placeholder=\" Unique Room ID\"\r\n          value={this.state.roodId}\r\n        />\r\n        <button id=\"btn-open-or-join-room\" onClick={join}>\r\n          Join button\r\n        </button>\r\n\r\n        <hr />\r\n\r\n        <div id=\"local-videos-container\" />\r\n\r\n        <hr />\r\n\r\n        <div id=\"remote-videos-container\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserArea;\r\n"]},"metadata":{},"sourceType":"module"}