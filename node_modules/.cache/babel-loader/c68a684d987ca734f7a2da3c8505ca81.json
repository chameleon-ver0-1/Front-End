{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar NativeDragSource =\n/** @class */\nfunction () {\n  function NativeDragSource(config) {\n    var _this = this;\n\n    this.config = config;\n    this.item = {};\n    Object.keys(this.config.exposeProperties).forEach(function (property) {\n      Object.defineProperty(_this.item, property, {\n        configurable: true,\n        enumerable: true,\n        get: function get() {\n          // tslint:disable-next-line no-console\n          console.warn(\"Browser doesn't allow reading \\\"\" + property + \"\\\" until the drop event.\");\n          return null;\n        }\n      });\n    });\n  }\n\n  NativeDragSource.prototype.mutateItemByReadingDataTransfer = function (dataTransfer) {\n    var _this = this;\n\n    var newProperties = {};\n\n    if (dataTransfer) {\n      Object.keys(this.config.exposeProperties).forEach(function (property) {\n        newProperties[property] = {\n          value: _this.config.exposeProperties[property](dataTransfer, _this.config.matchesTypes)\n        };\n      });\n    }\n\n    Object.defineProperties(this.item, newProperties);\n  };\n\n  NativeDragSource.prototype.canDrag = function () {\n    return true;\n  };\n\n  NativeDragSource.prototype.beginDrag = function () {\n    return this.item;\n  };\n\n  NativeDragSource.prototype.isDragging = function (monitor, handle) {\n    return handle === monitor.getSourceId();\n  };\n\n  NativeDragSource.prototype.endDrag = function () {// empty\n  };\n\n  return NativeDragSource;\n}();\n\nexports.NativeDragSource = NativeDragSource;","map":null,"metadata":{},"sourceType":"script"}