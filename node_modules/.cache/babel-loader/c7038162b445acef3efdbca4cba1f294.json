{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { ConfigConsumer } from '../config-provider';\n\nvar Comment =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Comment, _React$Component);\n\n  function Comment() {\n    var _this;\n\n    _classCallCheck(this, Comment);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Comment).apply(this, arguments));\n\n    _this.renderNested = function (prefixCls, children) {\n      return React.createElement(\"div\", {\n        className: classNames(\"\".concat(prefixCls, \"-nested\"))\n      }, children);\n    };\n\n    _this.renderComment = function (_ref) {\n      var getPrefixCls = _ref.getPrefixCls;\n\n      var _a = _this.props,\n          actions = _a.actions,\n          author = _a.author,\n          avatar = _a.avatar,\n          children = _a.children,\n          className = _a.className,\n          content = _a.content,\n          customizePrefixCls = _a.prefixCls,\n          style = _a.style,\n          datetime = _a.datetime,\n          otherProps = __rest(_a, [\"actions\", \"author\", \"avatar\", \"children\", \"className\", \"content\", \"prefixCls\", \"style\", \"datetime\"]);\n\n      var prefixCls = getPrefixCls('comment', customizePrefixCls);\n      var avatarDom = React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-avatar\")\n      }, typeof avatar === 'string' ? React.createElement(\"img\", {\n        src: avatar\n      }) : avatar);\n      var actionDom = actions && actions.length ? React.createElement(\"ul\", {\n        className: \"\".concat(prefixCls, \"-actions\")\n      }, _this.getAction(actions)) : null;\n      var authorContent = React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-content-author\")\n      }, author && React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-content-author-name\")\n      }, author), datetime && React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-content-author-time\")\n      }, datetime));\n      var contentDom = React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-content\")\n      }, authorContent, React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-content-detail\")\n      }, content), actionDom);\n      var comment = React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-inner\")\n      }, avatarDom, contentDom);\n      return React.createElement(\"div\", _extends({}, otherProps, {\n        className: classNames(prefixCls, className),\n        style: style\n      }), comment, children ? _this.renderNested(prefixCls, children) : null);\n    };\n\n    return _this;\n  }\n\n  _createClass(Comment, [{\n    key: \"getAction\",\n    value: function getAction(actions) {\n      if (!actions || !actions.length) {\n        return null;\n      }\n\n      var actionList = actions.map(function (action, index) {\n        return React.createElement(\"li\", {\n          key: \"action-\".concat(index)\n        }, action);\n      });\n      return actionList;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ConfigConsumer, null, this.renderComment);\n    }\n  }]);\n\n  return Comment;\n}(React.Component);\n\nexport { Comment as default };","map":null,"metadata":{},"sourceType":"module"}