{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport createContext from '@ant-design/create-react-context';\nimport { ConfigConsumer } from '../config-provider';\nimport { LayoutContext } from './layout'; // matchMedia polyfill for\n// https://github.com/WickyNilliams/enquire.js/issues/82\n\nif (typeof window !== 'undefined') {\n  var matchMediaPolyfill = function matchMediaPolyfill(mediaQuery) {\n    return {\n      media: mediaQuery,\n      matches: false,\n      addListener: function addListener() {},\n      removeListener: function removeListener() {}\n    };\n  };\n\n  window.matchMedia = window.matchMedia || matchMediaPolyfill;\n}\n\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport classNames from 'classnames';\nimport omit from 'omit.js';\nimport Icon from '../icon';\nimport isNumeric from '../_util/isNumeric';\nvar dimensionMap = {\n  xs: '480px',\n  sm: '576px',\n  md: '768px',\n  lg: '992px',\n  xl: '1200px',\n  xxl: '1600px'\n};\nexport var SiderContext = createContext({});\n\nvar generateId = function () {\n  var i = 0;\n  return function () {\n    var prefix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    i += 1;\n    return \"\".concat(prefix).concat(i);\n  };\n}();\n\nvar InternalSider =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(InternalSider, _React$Component);\n\n  function InternalSider(props) {\n    var _this;\n\n    _classCallCheck(this, InternalSider);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InternalSider).call(this, props));\n\n    _this.responsiveHandler = function (mql) {\n      _this.setState({\n        below: mql.matches\n      });\n\n      var onBreakpoint = _this.props.onBreakpoint;\n\n      if (onBreakpoint) {\n        onBreakpoint(mql.matches);\n      }\n\n      if (_this.state.collapsed !== mql.matches) {\n        _this.setCollapsed(mql.matches, 'responsive');\n      }\n    };\n\n    _this.setCollapsed = function (collapsed, type) {\n      if (!('collapsed' in _this.props)) {\n        _this.setState({\n          collapsed: collapsed\n        });\n      }\n\n      var onCollapse = _this.props.onCollapse;\n\n      if (onCollapse) {\n        onCollapse(collapsed, type);\n      }\n    };\n\n    _this.toggle = function () {\n      var collapsed = !_this.state.collapsed;\n\n      _this.setCollapsed(collapsed, 'clickTrigger');\n    };\n\n    _this.belowShowChange = function () {\n      _this.setState({\n        belowShow: !_this.state.belowShow\n      });\n    };\n\n    _this.renderSider = function (_ref) {\n      var _classNames;\n\n      var getPrefixCls = _ref.getPrefixCls;\n\n      var _a = _this.props,\n          customizePrefixCls = _a.prefixCls,\n          className = _a.className,\n          theme = _a.theme,\n          collapsible = _a.collapsible,\n          reverseArrow = _a.reverseArrow,\n          trigger = _a.trigger,\n          style = _a.style,\n          width = _a.width,\n          collapsedWidth = _a.collapsedWidth,\n          others = __rest(_a, [\"prefixCls\", \"className\", \"theme\", \"collapsible\", \"reverseArrow\", \"trigger\", \"style\", \"width\", \"collapsedWidth\"]);\n\n      var prefixCls = getPrefixCls('layout-sider', customizePrefixCls);\n      var divProps = omit(others, ['collapsed', 'defaultCollapsed', 'onCollapse', 'breakpoint', 'onBreakpoint', 'siderHook']);\n      var rawWidth = _this.state.collapsed ? collapsedWidth : width; // use \"px\" as fallback unit for width\n\n      var siderWidth = isNumeric(rawWidth) ? \"\".concat(rawWidth, \"px\") : String(rawWidth); // special trigger when collapsedWidth == 0\n\n      var zeroWidthTrigger = parseFloat(String(collapsedWidth || 0)) === 0 ? React.createElement(\"span\", {\n        onClick: _this.toggle,\n        className: \"\".concat(prefixCls, \"-zero-width-trigger \").concat(prefixCls, \"-zero-width-trigger-\").concat(reverseArrow ? 'right' : 'left')\n      }, React.createElement(Icon, {\n        type: \"bars\"\n      })) : null;\n      var iconObj = {\n        expanded: reverseArrow ? React.createElement(Icon, {\n          type: \"right\"\n        }) : React.createElement(Icon, {\n          type: \"left\"\n        }),\n        collapsed: reverseArrow ? React.createElement(Icon, {\n          type: \"left\"\n        }) : React.createElement(Icon, {\n          type: \"right\"\n        })\n      };\n      var status = _this.state.collapsed ? 'collapsed' : 'expanded';\n      var defaultTrigger = iconObj[status];\n      var triggerDom = trigger !== null ? zeroWidthTrigger || React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-trigger\"),\n        onClick: _this.toggle,\n        style: {\n          width: siderWidth\n        }\n      }, trigger || defaultTrigger) : null;\n\n      var divStyle = _extends({}, style, {\n        flex: \"0 0 \".concat(siderWidth),\n        maxWidth: siderWidth,\n        minWidth: siderWidth,\n        width: siderWidth\n      });\n\n      var siderCls = classNames(className, prefixCls, \"\".concat(prefixCls, \"-\").concat(theme), (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-collapsed\"), !!_this.state.collapsed), _defineProperty(_classNames, \"\".concat(prefixCls, \"-has-trigger\"), collapsible && trigger !== null && !zeroWidthTrigger), _defineProperty(_classNames, \"\".concat(prefixCls, \"-below\"), !!_this.state.below), _defineProperty(_classNames, \"\".concat(prefixCls, \"-zero-width\"), parseFloat(siderWidth) === 0), _classNames));\n      return React.createElement(\"aside\", _extends({\n        className: siderCls\n      }, divProps, {\n        style: divStyle\n      }), React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-children\")\n      }, _this.props.children), collapsible || _this.state.below && zeroWidthTrigger ? triggerDom : null);\n    };\n\n    _this.uniqueId = generateId('ant-sider-');\n    var matchMedia;\n\n    if (typeof window !== 'undefined') {\n      matchMedia = window.matchMedia;\n    }\n\n    if (matchMedia && props.breakpoint && props.breakpoint in dimensionMap) {\n      _this.mql = matchMedia(\"(max-width: \".concat(dimensionMap[props.breakpoint], \")\"));\n    }\n\n    var collapsed;\n\n    if ('collapsed' in props) {\n      collapsed = props.collapsed;\n    } else {\n      collapsed = props.defaultCollapsed;\n    }\n\n    _this.state = {\n      collapsed: collapsed,\n      below: false\n    };\n    return _this;\n  }\n\n  _createClass(InternalSider, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.mql) {\n        this.mql.addListener(this.responsiveHandler);\n        this.responsiveHandler(this.mql);\n      }\n\n      if (this.props.siderHook) {\n        this.props.siderHook.addSider(this.uniqueId);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.mql) {\n        this.mql.removeListener(this.responsiveHandler);\n      }\n\n      if (this.props.siderHook) {\n        this.props.siderHook.removeSider(this.uniqueId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var collapsed = this.state.collapsed;\n      var collapsedWidth = this.props.collapsedWidth;\n      return React.createElement(SiderContext.Provider, {\n        value: {\n          siderCollapsed: collapsed,\n          collapsedWidth: collapsedWidth\n        }\n      }, React.createElement(ConfigConsumer, null, this.renderSider));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps) {\n      if ('collapsed' in nextProps) {\n        return {\n          collapsed: nextProps.collapsed\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return InternalSider;\n}(React.Component);\n\nInternalSider.defaultProps = {\n  collapsible: false,\n  defaultCollapsed: false,\n  reverseArrow: false,\n  width: 200,\n  collapsedWidth: 80,\n  style: {},\n  theme: 'dark'\n};\npolyfill(InternalSider);\n\nvar Sider =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(Sider, _React$Component2);\n\n  function Sider() {\n    _classCallCheck(this, Sider);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Sider).apply(this, arguments));\n  }\n\n  _createClass(Sider, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(LayoutContext.Consumer, null, function (context) {\n        return React.createElement(InternalSider, _extends({}, context, _this2.props));\n      });\n    }\n  }]);\n\n  return Sider;\n}(React.Component);\n\nexport { Sider as default };","map":null,"metadata":{},"sourceType":"module"}