{"ast":null,"code":"import _classCallCheck from \"C:\\\\React\\\\react-gradu\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\React\\\\react-gradu\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\React\\\\react-gradu\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\React\\\\react-gradu\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\React\\\\react-gradu\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"C:\\\\React\\\\react-gradu\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\React\\\\react-gradu\\\\src\\\\components\\\\independent\\\\issue\\\\issues\\\\IssueBox.jsx\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  // background-color: \", \";\\n  flex-grow: 1;\\n  min-height: 100px;\\n\\n\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  margin-right: 25px;\\n  width: 249px;\\n  height: 540px;\\n\\n  display: flex;\\n  flex-direction: column;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from \"react\";\nimport IssueItem from \"../issueItem/IssueItem\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nvar Container = styled.div(_templateObject());\nvar ItemList = styled.div(_templateObject2(), function (props) {\n  return props.isDraggingOver ? \"skyblue\" : \"white\";\n});\nexport var IssueBox =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(IssueBox, _Component);\n\n  function IssueBox() {\n    _classCallCheck(this, IssueBox);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(IssueBox).apply(this, arguments));\n  }\n\n  _createClass(IssueBox, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          column = _this$props.column,\n          count = _this$props.count,\n          tasks = _this$props.tasks; //TODO: backgroundColor: $(props.isDraggingOver ? 'skyblue':'white');\n\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"issues-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"issues-title-status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, column.title), React.createElement(\"p\", {\n        className: \"issues-title-count\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, count)), React.createElement(Droppable, {\n        droppableId: column.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, function (provided, snapshot) {\n        return React.createElement(ItemList, Object.assign({\n          className: \"issues-body\",\n          ref: provided.innerRef\n        }, provided.droppableProps, {\n          isDraggingOver: snapshot.isDraggingOver,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }), tasks.map(function (task, index) {\n          return React.createElement(IssueItem, {\n            key: task.id,\n            task: task,\n            index: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 43\n            },\n            __self: this\n          });\n        }), provided.placeholder);\n      }));\n    }\n  }]);\n\n  return IssueBox;\n}(Component);\nexport default IssueBox;","map":{"version":3,"sources":["C:\\React\\react-gradu\\src\\components\\independent\\issue\\issues\\IssueBox.jsx"],"names":["React","Component","IssueItem","Droppable","styled","Container","div","ItemList","props","isDraggingOver","IssueBox","column","count","tasks","title","id","provided","snapshot","innerRef","droppableProps","map","task","index","placeholder"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AAEA,SAASC,SAAT,QAA0B,qBAA1B;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,IAAMC,SAAS,GAAGD,MAAM,CAACE,GAAV,mBAAf;AAQA,IAAMC,QAAQ,GAAGH,MAAM,CAACE,GAAV,qBACW,UAAAE,KAAK;AAAA,SAAKA,KAAK,CAACC,cAAN,GAAuB,SAAvB,GAAmC,OAAxC;AAAA,CADhB,CAAd;AAOA,WAAaC,QAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BACW;AAAA,wBAC0B,KAAKF,KAD/B;AAAA,UACCG,MADD,eACCA,MADD;AAAA,UACSC,KADT,eACSA,KADT;AAAA,UACgBC,KADhB,eACgBA,KADhB,EAGP;;AAEA,aACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoCF,MAAM,CAACG,KAA3C,CADF,EAEE;AAAG,QAAA,SAAS,EAAC,oBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmCF,KAAnC,CAFF,CADF,EAKE,oBAAC,SAAD;AAAW,QAAA,WAAW,EAAED,MAAM,CAACI,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,UAACC,QAAD,EAAWC,QAAX;AAAA,eACC,oBAAC,QAAD;AACE,UAAA,SAAS,EAAC,aADZ;AAEE,UAAA,GAAG,EAAED,QAAQ,CAACE;AAFhB,WAGMF,QAAQ,CAACG,cAHf;AAIE,UAAA,cAAc,EAAEF,QAAQ,CAACR,cAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAMGI,KAAK,CAACO,GAAN,CAAU,UAACC,IAAD,EAAOC,KAAP;AAAA,iBACT,oBAAC,SAAD;AAAW,YAAA,GAAG,EAAED,IAAI,CAACN,EAArB;AAAyB,YAAA,IAAI,EAAEM,IAA/B;AAAqC,YAAA,KAAK,EAAEC,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADS;AAAA,SAAV,CANH,EASGN,QAAQ,CAACO,WATZ,CADD;AAAA,OADH,CALF,CADF;AAuBD;AA7BH;;AAAA;AAAA,EAA8BtB,SAA9B;AAgCA,eAAeS,QAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport IssueItem from \"../issueItem/IssueItem\";\r\n\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\n\r\nimport styled from \"styled-components\";\r\nconst Container = styled.div`\r\n  margin-right: 25px;\r\n  width: 249px;\r\n  height: 540px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nconst ItemList = styled.div`\r\n  // background-color: ${props => (props.isDraggingOver ? \"skyblue\" : \"white\")};\r\n  flex-grow: 1;\r\n  min-height: 100px;\r\n\r\n\r\n`;\r\nexport class IssueBox extends Component {\r\n  render() {\r\n    const { column, count, tasks } = this.props;\r\n\r\n    //TODO: backgroundColor: $(props.isDraggingOver ? 'skyblue':'white');\r\n\r\n    return (\r\n      <Container>\r\n        <div className=\"issues-title\">\r\n          <p className=\"issues-title-status\">{column.title}</p>\r\n          <p className=\"issues-title-count\">{count}</p>\r\n        </div>\r\n        <Droppable droppableId={column.id}>\r\n          {(provided, snapshot) => (\r\n            <ItemList\r\n              className=\"issues-body\"\r\n              ref={provided.innerRef}\r\n              {...provided.droppableProps}\r\n              isDraggingOver={snapshot.isDraggingOver}\r\n            >\r\n              {tasks.map((task, index) => (\r\n                <IssueItem key={task.id} task={task} index={index} />\r\n              ))}\r\n              {provided.placeholder}\r\n            </ItemList>\r\n          )}\r\n        </Droppable>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default IssueBox;\r\n"]},"metadata":{},"sourceType":"module"}