{"ast":null,"code":"import _classCallCheck from \"C:\\\\React\\\\react-gradu\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\React\\\\react-gradu\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\React\\\\react-gradu\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\React\\\\react-gradu\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\React\\\\react-gradu\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\React\\\\react-gradu\\\\src\\\\components\\\\independent\\\\webRTCRoom\\\\UserArea.jsx\";\nimport React, { Component } from \"react\";\nimport \"./webrtc.style.css\";\nvar predefinedRoomId = \"Choyoonyoung\";\nvar connection = new window.RTCMultiConnection(); // this line is VERY_important\n\nconnection.socketURL = \"https://rtcmulticonnection.herokuapp.com:443/\";\nexport var UserArea =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UserArea, _Component);\n\n  function UserArea() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UserArea);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UserArea)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      roomId: \"100\"\n    };\n    return _this;\n  }\n\n  _createClass(UserArea, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var script = document.createElement(\"script\");\n      script.src = \"https://cdn.webrtc-experiment.com/RTCMultiConnection.js\";\n      script.src = \"https://cdn.webrtc-experiment.com/conversation.js\";\n      script.src = \"https://rtcmulticonnection.herokuapp.com/dist/RTCMultiConnection.min.js\";\n      script.src = \"https://rtcmulticonnection.herokuapp.com/socket.io/socket.io.js\";\n      script.async = true;\n      document.body.appendChild(script);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var roomid = document.getElementById(\"txt-roomid\");\n      roomid.value = connection.token();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // if you want audio+video conferencing\n      connection.session = {\n        audio: true,\n        video: true\n      };\n      connection.sdpConstraints.mandatory = {\n        OfferToReceiveAudio: true,\n        OfferToReceiveVideo: true\n      };\n\n      var join = function join(e) {\n        _this2.disabled = true;\n        connection.openOrJoin(e.target.value || predefinedRoomId);\n      };\n\n      var localVideosContainer = document.getElementById(\"local-videos-container\");\n      var remoteVideosContainer = document.getElementById(\"remote-videos-container\"); //FIXME:아래 onstream을 제거하면 잘 돌아가지만, 추가하면서 화면이 띄워지지 않는 현상이 벌어짐.\n\n      connection.onstream = function (event) {\n        var video = event.mediaElement;\n\n        if (event.type === \"local\") {\n          localVideosContainer.appendChild(video);\n          console.log(\"local\");\n        }\n\n        if (event.type === \"remote\") {\n          remoteVideosContainer.appendChild(video);\n          console.log(\"remote\");\n        }\n      };\n\n      return React.createElement(\"div\", {\n        class: \"webrtc-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"txt-roomid\",\n        placeholder: \" Unique Room ID\",\n        value: this.state.roodId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        id: \"btn-open-or-join-room\",\n        onClick: join,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Join button\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"local-videos-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"remote-videos-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return UserArea;\n}(Component);\nexport default UserArea;","map":{"version":3,"sources":["C:\\React\\react-gradu\\src\\components\\independent\\webRTCRoom\\UserArea.jsx"],"names":["React","Component","predefinedRoomId","connection","window","RTCMultiConnection","socketURL","UserArea","state","roomId","script","document","createElement","src","async","body","appendChild","roomid","getElementById","value","token","session","audio","video","sdpConstraints","mandatory","OfferToReceiveAudio","OfferToReceiveVideo","join","e","disabled","openOrJoin","target","localVideosContainer","remoteVideosContainer","onstream","event","mediaElement","type","console","log","roodId"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./webrtc.style.css\";\r\n\r\nvar predefinedRoomId = \"Choyoonyoung\";\r\nvar connection = new window.RTCMultiConnection();\r\n\r\n// this line is VERY_important\r\nconnection.socketURL = \"https://rtcmulticonnection.herokuapp.com:443/\";\r\n\r\nexport class UserArea extends Component {\r\n  state = {\r\n    roomId: \"100\"\r\n  };\r\n\r\n  componentWillMount() {\r\n    const script = document.createElement(\"script\");\r\n\r\n    script.src = \"https://cdn.webrtc-experiment.com/RTCMultiConnection.js\";\r\n    script.src = \"https://cdn.webrtc-experiment.com/conversation.js\";\r\n    script.src =\r\n      \"https://rtcmulticonnection.herokuapp.com/dist/RTCMultiConnection.min.js\";\r\n    script.src =\r\n      \"https://rtcmulticonnection.herokuapp.com/socket.io/socket.io.js\";\r\n\r\n    script.async = true;\r\n\r\n    document.body.appendChild(script);\r\n  }\r\n\r\n  componentDidMount() {\r\n    var roomid = document.getElementById(\"txt-roomid\");\r\n\r\n    roomid.value = connection.token();\r\n  }\r\n\r\n  render() {\r\n    // if you want audio+video conferencing\r\n    connection.session = {\r\n      audio: true,\r\n      video: true\r\n    };\r\n\r\n    connection.sdpConstraints.mandatory = {\r\n      OfferToReceiveAudio: true,\r\n      OfferToReceiveVideo: true\r\n    };\r\n    const join = e => {\r\n      this.disabled = true;\r\n      connection.openOrJoin(e.target.value || predefinedRoomId);\r\n    };\r\n\r\n    var localVideosContainer = document.getElementById(\r\n      \"local-videos-container\"\r\n    );\r\n    var remoteVideosContainer = document.getElementById(\r\n      \"remote-videos-container\"\r\n    );\r\n\r\n    //FIXME:아래 onstream을 제거하면 잘 돌아가지만, 추가하면서 화면이 띄워지지 않는 현상이 벌어짐.\r\n    connection.onstream = function(event) {\r\n      var video = event.mediaElement;\r\n      if (event.type === \"local\") {\r\n        localVideosContainer.appendChild(video);\r\n        console.log(\"local\");\r\n      }\r\n      if (event.type === \"remote\") {\r\n        remoteVideosContainer.appendChild(video);\r\n        console.log(\"remote\");\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div class=\"webrtc-container\">\r\n        <input\r\n          id=\"txt-roomid\"\r\n          placeholder=\" Unique Room ID\"\r\n          value={this.state.roodId}\r\n        />\r\n        <button id=\"btn-open-or-join-room\" onClick={join}>\r\n          Join button\r\n        </button>\r\n\r\n        <hr />\r\n\r\n        <div id=\"local-videos-container\" />\r\n\r\n        <hr />\r\n\r\n        <div id=\"remote-videos-container\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserArea;\r\n"]},"metadata":{},"sourceType":"module"}