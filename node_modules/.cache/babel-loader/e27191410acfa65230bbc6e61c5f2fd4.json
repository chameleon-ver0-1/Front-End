{"ast":null,"code":"import _extends from \"babel-runtime/helpers/extends\";\nimport _classCallCheck from \"babel-runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"babel-runtime/helpers/possibleConstructorReturn\";\nimport _inherits from \"babel-runtime/helpers/inherits\";\nimport * as React from 'react';\n\nvar LazyRenderBox = function (_React$Component) {\n  _inherits(LazyRenderBox, _React$Component);\n\n  function LazyRenderBox() {\n    _classCallCheck(this, LazyRenderBox);\n\n    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n  }\n\n  LazyRenderBox.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    return !!nextProps.hiddenClassName || !!nextProps.visible;\n  };\n\n  LazyRenderBox.prototype.render = function render() {\n    var className = this.props.className;\n\n    if (!!this.props.hiddenClassName && !this.props.visible) {\n      className += \" \" + this.props.hiddenClassName;\n    }\n\n    var props = _extends({}, this.props);\n\n    delete props.hiddenClassName;\n    delete props.visible;\n    props.className = className;\n    return React.createElement(\"div\", _extends({}, props));\n  };\n\n  return LazyRenderBox;\n}(React.Component);\n\nexport default LazyRenderBox;","map":null,"metadata":{},"sourceType":"module"}