{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _reactAddonsUpdate = require('react-addons-update');\n\nvar _reactAddonsUpdate2 = _interopRequireDefault(_reactAddonsUpdate);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _locale = require('../locale.js');\n\nvar _constValue = require('../constValue');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar TRANSLATE_FIRST_SIZE = {\n  l: '-2px, -1px',\n  m: '-2px, -1px',\n  s: '-2px, -1px',\n  xs: '0px, -1px'\n};\nvar TRANSLATE_SECOND_SIZE = {\n  l: '0px, 155px',\n  m: '0px, 125px',\n  s: '0px, 95px',\n  xs: '0px, 85px'\n};\nvar TRANSLATE_QUARTER_SECOND_SIZE = {\n  l: '0px, -3px',\n  m: '0px, -3px',\n  s: '0px, -3px',\n  xs: '0px, -3px'\n};\nvar SECONDS_TRANSLATE_FIRST_SIZE = {\n  l: '-1px, -34.5px',\n  m: '-1px, -34.5px',\n  s: '-1px, -34.5px',\n  xs: '-1px, -34.5px'\n};\nvar SECONDS_TRANSLATE_SECOND_SIZE = {\n  l: '0px, -22.5px',\n  m: '0px, -22.5px',\n  s: '0px, -22.5px',\n  xs: '0px, -22.5px'\n};\nvar MINUTES_TRANSLATE_FIRST_SIZE = {\n  l: '-1px, -32.5px',\n  m: '-1px, -32.5px',\n  s: '-1px, -32.5px',\n  xs: '-1px, -32.5px'\n};\nvar MINUTES_TRANSLATE_SECOND_SIZE = {\n  l: '0px, -20.5px',\n  m: '0px, -20.5px',\n  s: '0px, -20.5px',\n  xs: '0px, -20.5px'\n};\nvar HOURS_TRANSLATE_FIRST_SIZE = {\n  l: '-1.5px, -24.5px',\n  m: '-1.5px, -24.5px',\n  s: '-1.5px, -24.5px',\n  xs: '-1.5px, -24.5px'\n};\nvar HOURS_TRANSLATE_SECOND_SIZE = {\n  l: '0px, -14.5px',\n  m: '0px, -14.5px',\n  s: '0px, -14.5px',\n  xs: '0px, -14.5px'\n};\n\nvar emptyFn = function emptyFn() {};\n\nvar isValidTime = function isValidTime(value) {\n  // Checks if time is in HH:MM:SS AM/PM format.\n  // The seconds and AM/PM are optional.\n  if (value == '') {\n    return false;\n  }\n\n  var timePat = /^(\\d{1,2}):(\\d{2})(:(\\d{2}))?(\\s?(AM|am|PM|pm))?$/;\n  var matchArray = value.match(timePat);\n\n  if (matchArray == null) {\n    console.error('Time is not in a valid format.');\n    return false;\n  }\n\n  var hour = matchArray[1];\n  var minute = matchArray[2];\n  var second = matchArray[4];\n  var meridiem = matchArray[6];\n\n  if (second == '') {\n    second = null;\n  }\n\n  if (meridiem == '') {\n    meridiem = null;\n  }\n\n  if (hour < 0 || hour > 23) {\n    console.error('Hour must be between 1 and 12.');\n    return false;\n  }\n\n  if (hour <= 12 && meridiem == null) {\n    console.error('You must specify AM or PM.');\n    return false;\n  }\n\n  if (hour > 12 && meridiem != null) {\n    console.error(\"You can't specify AM or PM for military time.\");\n    return false;\n  }\n\n  if (minute < 0 || minute > 59) {\n    console.error('Minute must be between 0 and 59.');\n    return false;\n  }\n\n  if (second != null && (second < 0 || second > 59)) {\n    console.error('Second must be between 0 and 59.');\n    return false;\n  }\n\n  second = formatClockNumber(second);\n  minute = formatClockNumber(minute);\n  var hourText = formatClockNumber(hour);\n  return {\n    hour: hour,\n    minute: minute,\n    second: second,\n    meridiem: meridiem,\n    hourText: hourText\n  };\n};\n\nvar formatClockNumber = function formatClockNumber(value) {\n  value = Number(value);\n\n  if (value < 10 && value >= 0) {\n    return value = '0' + value;\n  }\n\n  return value;\n};\n\nvar getTodayObj = function getTodayObj() {\n  var today = new Date();\n  var year = today.getFullYear();\n  var month = today.getMonth() + 1;\n  var date = today.getDate();\n  var hour = today.getHours();\n  var minute = today.getMinutes();\n  var second = today.getSeconds();\n  var meridiem = Number(hour) < 12 ? 'AM' : 'PM';\n  var hourText = hour > 12 ? hour - 12 : hour;\n  second = formatClockNumber(second);\n  minute = formatClockNumber(minute);\n  hourText = formatClockNumber(hourText);\n  return {\n    year: year,\n    month: month,\n    date: date,\n    hour: hour,\n    minute: minute,\n    second: second,\n    meridiem: meridiem,\n    hourText: hourText\n  };\n};\n\nvar getInputCharSkipNum = function getInputCharSkipNum(pos) {\n  var num = 1;\n\n  if (_constValue.TIME_JUMP_CHAR_POS_LIST.indexOf(pos) != -1) {\n    num = 2;\n  }\n\n  return num;\n};\n\nvar Clock = function (_React$Component) {\n  _inherits(Clock, _React$Component);\n\n  function Clock(props) {\n    _classCallCheck(this, Clock);\n\n    var _this = _possibleConstructorReturn(this, (Clock.__proto__ || Object.getPrototypeOf(Clock)).call(this, props));\n\n    var todayObj = getTodayObj();\n    var hour = todayObj.hour,\n        minute = todayObj.minute,\n        second = todayObj.second,\n        meridiem = todayObj.meridiem,\n        hourText = todayObj.hourText;\n    var defaultTimeObj = isValidTime(props.defaultTime);\n\n    if (defaultTimeObj) {\n      hour = defaultTimeObj.hour;\n      hourText = defaultTimeObj.hourText;\n      minute = defaultTimeObj.minute;\n      second = defaultTimeObj.second;\n      meridiem = defaultTimeObj.meridiem;\n    }\n\n    _this.startX = 0;\n    _this.startY = 0;\n    _this.originX = null;\n    _this.originY = null;\n    var secondDegree = second * _constValue.SECOND_DEGREE_NUMBER;\n    var minuteDegree = minute * _constValue.MINUTE_DEGREE_NUMBER;\n    var hourDegree = hour * _constValue.HOUR_DEGREE_NUMBER;\n    var clockHandObj = {\n      value: '',\n      degree: '',\n      startAngle: '',\n      angle: '',\n      isMouseOver: false,\n      isDragging: false\n    };\n    _this.state = {\n      defaultTimeObj: defaultTimeObj,\n      clockHandSecond: _this.updateClockHandObj(clockHandObj, second, secondDegree, secondDegree, secondDegree),\n      clockHandMinute: _this.updateClockHandObj(clockHandObj, minute, minuteDegree, minuteDegree, minuteDegree),\n      clockHandHour: _this.updateClockHandObj(clockHandObj, hourText, hourDegree, hourDegree, hourDegree),\n      meridiem: meridiem,\n      slectionRange: {\n        start: 0,\n        end: 0\n      }\n    };\n    _this.handleMouseDown = _this.handleMouseDown.bind(_this);\n    _this.handleMouseMove = _this.handleMouseMove.bind(_this);\n    _this.handleMouseUp = _this.handleMouseUp.bind(_this);\n    _this.initCoordinates = _this.initCoordinates.bind(_this);\n    _this.updateClock = _this.updateClock.bind(_this);\n    return _this;\n  }\n\n  _createClass(Clock, [{\n    key: 'initCoordinates',\n    value: function initCoordinates() {\n      if (this.clockCenter == null) {\n        return;\n      }\n\n      var centerPoint = _reactDom2.default.findDOMNode(this.clockCenter);\n\n      var centerPointPos = centerPoint.getBoundingClientRect();\n      var top = centerPointPos.top,\n          left = centerPointPos.left,\n          height = centerPointPos.height,\n          width = centerPointPos.width;\n      this.originX = left + width / 2;\n      this.originY = top + height / 2;\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      setTimeout(function () {\n        return _this2.initCoordinates();\n      }, 1000);\n\n      if (document.addEventListener) {\n        document.addEventListener('resize', this.initCoordinates, true);\n        document.addEventListener('scroll', this.initCoordinates, true);\n        document.addEventListener('mousemove', this.handleMouseMove, true);\n        document.addEventListener('mouseup', this.handleMouseUp, true);\n      } else {\n        document.attachEvent('onresize', this.handleMouseMove);\n        document.attachEvent('onscroll', this.handleMouseMove);\n        document.attachEvent('onmousemove', this.handleMouseMove);\n        document.attachEvent('onmouseup', this.handleMouseUp);\n      }\n\n      if (!this.state.defaultTimeObj) {\n        this.initializeClock();\n      }\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (prevState.slectionRange != this.state.slectionRange) {\n        this.timeInput.focus();\n        this.timeInput.setSelectionRange(this.state.slectionRange.start, this.state.slectionRange.end);\n      }\n\n      if (this.timeinterval === false) {\n        if (prevState.clockHandSecond != this.state.clockHandSecond) {\n          this.props.onSecondChange(this.state.clockHandSecond);\n        }\n\n        if (prevState.clockHandMinute != this.state.clockHandMinute) {\n          this.props.onMinuteChange(this.state.clockHandMinute);\n        }\n\n        if (prevState.clockHandHour != this.state.clockHandHour) {\n          this.props.onHourChange(this.state.clockHandHour);\n        }\n\n        if (prevState.meridiem != this.state.meridiem) {\n          this.props.onMeridiemChange(this.state.meridiem);\n        }\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (document.removeEventListener) {\n        document.removeEventListener('resize', this.initCoordinates, true);\n        document.removeEventListener('scroll', this.initCoordinates, true);\n        document.removeEventListener('mousemove', this.handleMouseMove, true);\n        document.removeEventListener('mouseup', this.handleMouseUp, true);\n      } else {\n        document.detachEvent('onresize', this.handleMouseMove);\n        document.detachEvent('onscroll', this.handleMouseMove);\n        document.detachEvent('onmousemove', this.handleMouseMove);\n        document.detachEvent('onmouseup', this.handleMouseUp);\n      }\n    }\n  }, {\n    key: 'updateClockHandObj',\n    value: function updateClockHandObj(o, value, degree, startAngle, angle) {\n      var isMouseOver = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n      var isDragging = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;\n      o = (0, _reactAddonsUpdate2.default)(o, {\n        value: {\n          $set: value\n        },\n        degree: {\n          $set: degree\n        },\n        startAngle: {\n          $set: startAngle\n        },\n        angle: {\n          $set: angle\n        },\n        isMouseOver: {\n          $set: isMouseOver\n        },\n        isDragging: {\n          $set: isDragging\n        }\n      });\n      return o;\n    }\n  }, {\n    key: 'initializeClock',\n    value: function initializeClock() {\n      this.timeinterval = setInterval(this.updateClock, 1000);\n    }\n  }, {\n    key: 'updateClock',\n    value: function updateClock() {\n      if (this.clock == null) {\n        return;\n      }\n\n      if (this.state.clockHandSecond.isDragging || this.state.clockHandMinute.isDragging || this.state.clockHandHour.isDragging) {\n        this._clearInterval();\n\n        return;\n      }\n\n      this.resetClockHandObj();\n    }\n  }, {\n    key: '_clearInterval',\n    value: function _clearInterval() {\n      clearInterval(this.timeinterval);\n      this.timeinterval = false;\n    }\n  }, {\n    key: 'resetClockHandObj',\n    value: function resetClockHandObj() {\n      var clear = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var defaultTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var _state = this.state,\n          clockHandSecond = _state.clockHandSecond,\n          clockHandMinute = _state.clockHandMinute,\n          clockHandHour = _state.clockHandHour;\n      var hour = '12',\n          minute = '00',\n          second = '00',\n          hourText = '12',\n          meridiem = 'AM';\n\n      if (!clear) {\n        var todayObj = getTodayObj();\n        hour = todayObj.hour;\n        minute = todayObj.minute;\n        second = todayObj.second;\n        hourText = todayObj.hourText;\n        meridiem = todayObj.meridiem;\n      }\n\n      if (defaultTime) {\n        var defaultTimeObj = this.state.defaultTimeObj;\n        hour = defaultTimeObj.hour;\n        minute = defaultTimeObj.minute;\n        second = defaultTimeObj.second;\n        hourText = defaultTimeObj.hourText;\n        meridiem = defaultTimeObj.meridiem;\n      }\n\n      var secondDegree = second * _constValue.SECOND_DEGREE_NUMBER;\n      var minuteDegree = minute * _constValue.MINUTE_DEGREE_NUMBER;\n      var hourDegree = hour * _constValue.HOUR_DEGREE_NUMBER;\n      clockHandSecond = this.updateClockHandObj(clockHandSecond, second, secondDegree, secondDegree, secondDegree);\n      clockHandMinute = this.updateClockHandObj(clockHandMinute, minute, minuteDegree, minuteDegree, minuteDegree);\n      clockHandHour = this.updateClockHandObj(clockHandHour, hourText, hourDegree, hourDegree, hourDegree);\n      this.setState({\n        clockHandSecond: clockHandSecond,\n        clockHandMinute: clockHandMinute,\n        clockHandHour: clockHandHour,\n        meridiem: meridiem\n      });\n      return {\n        clockHandSecond: clockHandSecond,\n        clockHandMinute: clockHandMinute,\n        clockHandHour: clockHandHour,\n        meridiem: meridiem\n      };\n    }\n  }, {\n    key: 'onFocus',\n    value: function onFocus() {\n      this._clearInterval();\n    }\n  }, {\n    key: 'onClick',\n    value: function onClick() {}\n  }, {\n    key: 'handleMouseWheel',\n    value: function handleMouseWheel(e) {\n      this.onKeyDown({\n        keyCode: e.deltaY > 0 ? '38' : '40',\n        type: e.type || 'unknown',\n        stopPropagation: typeof e.stopPropagation == 'function' ? function () {\n          return e.stopPropagation();\n        } : emptyFn,\n        preventDefault: typeof e.preventDefault == 'function' ? function () {\n          return e.preventDefault();\n        } : emptyFn\n      });\n      e.preventDefault();\n    }\n  }, {\n    key: 'onKeyDown',\n    value: function onKeyDown(e) {\n      var _this3 = this;\n\n      this.resetting = false;\n      var keyCode = e.keyCode;\n      var el = this.timeInput;\n      var pos = {\n        start: el.selectionStart,\n        end: el.selectionEnd\n      };\n      var key = _constValue.KEY_CODE[keyCode];\n\n      if (typeof key == 'undefined') {\n        this.setState({\n          slectionRange: pos\n        });\n        return;\n      }\n\n      var range = {\n        start: 0,\n        end: 0\n      };\n      var elObj = void 0,\n          refName = void 0;\n      var o = {};\n\n      if (_constValue.TIME_CURSOR_POSITION_OBJECT[pos.start]) {\n        o[_constValue.TIME_CURSOR_POSITION_OBJECT[pos.start]] = true;\n        range.start = pos.start == pos.end ? pos.start - 2 : pos.start;\n        range.end = pos.start;\n      }\n\n      _constValue.TIME_TYPE.map(function (i) {\n        if (typeof o[i] != 'undefined' && o[i]) {\n          refName = i;\n          elObj = _this3.state[refName];\n        }\n      });\n\n      var newValue = void 0;\n\n      if (key == 'ArrowUp' || key == 'ArrowDown') {\n        range.start = pos.start;\n        range.end = pos.start != pos.end ? pos.start + 2 : pos.start;\n        var val = Number(elObj.value);\n        var diff = 1;\n\n        if (key == 'ArrowDown') {\n          diff = -diff;\n        }\n\n        newValue = val + diff;\n\n        if (refName == 'clockHandMinute' || refName == 'clockHandSecond') {\n          if (newValue == 60) {\n            newValue = 0;\n          }\n\n          if (newValue == -1) {\n            newValue = 59;\n          }\n        } else if (refName == 'clockHandHour') {\n          if (newValue == 13) {\n            newValue = 1;\n          }\n\n          if (newValue == -1) {\n            newValue = 11;\n          }\n        }\n      } else if (!isNaN(Number(key)) || key == 'Backspace' || key == 'Delete') {\n        var number = Number(key),\n            start = void 0,\n            end = void 0;\n        var skipNum = getInputCharSkipNum(pos.start);\n\n        if (key == 'Backspace') {\n          skipNum = -skipNum;\n          number = 0;\n          start = pos.start + skipNum;\n          end = pos.start + skipNum;\n\n          if (!elObj.value) {\n            this.setState({\n              slectionRange: {\n                start: start,\n                end: end\n              }\n            });\n            e.preventDefault();\n            return;\n          }\n        }\n\n        if (key == 'Delete') {\n          number = 0;\n        }\n\n        if (elObj.value) {\n          newValue = number;\n          var strValue = elObj.value.toString();\n\n          if (pos.start == pos.end) {\n            if (skipNum > 0) {\n              if (_constValue.TIME_SELECTION_FIRST_CHAR_POS_LIST.indexOf(pos.start) != -1) {\n                // 0*\n                newValue = Number(number + strValue.substr(strValue.length - 1));\n              } else if (_constValue.TIME_SELECTION_SECOND_CHAR_POS_LIST.indexOf(pos.start) != -1) {\n                // *0\n                newValue = Number(strValue.substr(0, 1) + number);\n              }\n            } else {\n              if (_constValue.TIME_SELECTION_FIRST_CHAR_POS_BACKSPACE_LIST.indexOf(pos.start) != -1) {\n                // 0*\n                newValue = Number(number + strValue.substr(strValue.length - 1));\n              } else if (_constValue.TIME_SELECTION_SECOND_CHAR_POS_BACKSPACE_LIST.indexOf(pos.start) != -1) {\n                // *0\n                newValue = Number(strValue.substr(0, 1) + number);\n              }\n            }\n\n            range.start = range.end = pos.start + skipNum;\n          } else {\n            if (_constValue.TIME_SELECTION_FIRST_CHAR_POS_LIST.indexOf(pos.start) != -1) {\n              if (pos.end < pos.start) {\n                newValue = Number(strValue.substr(0, 1) + number);\n                range.start = range.end = pos.start;\n              } else {\n                newValue = Number(number + strValue.substr(strValue.length - 1));\n                range.start = range.end = pos.start + skipNum;\n              }\n            }\n          }\n\n          if (refName == 'clockHandHour' && (newValue == 0 || newValue > 12)) {\n            newValue = 12;\n          } else {\n            if (newValue > 60) {\n              newValue = key;\n              range.start = range.end = pos.start + skipNum;\n            }\n          }\n        }\n      }\n\n      newValue = formatClockNumber(newValue);\n      var slectionRange = {\n        start: range.start,\n        end: range.end\n      }; // debugger;\n\n      if (!isNaN(newValue) && refName != 'meridiem') {\n        var _setState;\n\n        var newDegree = void 0;\n\n        if (refName == 'clockHandSecond') {\n          newDegree = Number(newValue) * _constValue.SECOND_DEGREE_NUMBER;\n        }\n\n        if (refName == 'clockHandMinute') {\n          newDegree = Number(newValue) * _constValue.MINUTE_DEGREE_NUMBER;\n        }\n\n        if (refName == 'clockHandHour') {\n          if (Number(newValue) == 0) {\n            newValue = 12;\n          }\n\n          newDegree = Number(newValue) * _constValue.HOUR_DEGREE_NUMBER;\n        }\n\n        elObj = (0, _reactAddonsUpdate2.default)(elObj, {\n          value: {\n            $set: newValue\n          },\n          degree: {\n            $set: newDegree\n          },\n          startAngle: {\n            $set: newDegree\n          },\n          angle: {\n            $set: newDegree\n          }\n        });\n        this.setState((_setState = {}, _defineProperty(_setState, refName, elObj), _defineProperty(_setState, 'slectionRange', slectionRange), _setState));\n      }\n\n      if (key == 'ArrowUp' || key == 'ArrowDown') {\n        if (refName == 'meridiem') {\n          var _setState2;\n\n          var meridiem = 'AM';\n\n          if (elObj == 'AM') {\n            meridiem = 'PM';\n          }\n\n          elObj = meridiem;\n          this.setState((_setState2 = {}, _defineProperty(_setState2, refName, elObj), _defineProperty(_setState2, 'slectionRange', slectionRange), _setState2));\n        }\n      }\n\n      if (!(key == 'ArrowLeft' || key == 'ArrowRight')) {\n        e.preventDefault();\n      }\n    }\n  }, {\n    key: 'onMouseOver',\n    value: function onMouseOver(refName) {\n      var elObj = this.state[refName];\n      elObj = (0, _reactAddonsUpdate2.default)(elObj, {\n        isMouseOver: {\n          $set: true\n        }\n      });\n      this.setState(_defineProperty({}, refName, elObj));\n    }\n  }, {\n    key: 'onMouseOut',\n    value: function onMouseOut(refName) {\n      var elObj = this.state[refName];\n      elObj = (0, _reactAddonsUpdate2.default)(elObj, {\n        isMouseOver: {\n          $set: false\n        }\n      });\n      this.setState(_defineProperty({}, refName, elObj));\n    }\n  }, {\n    key: 'handleMouseDown',\n    value: function handleMouseDown(refName, e) {\n      var elObj = this.state[refName];\n      var x = e.clientX - this.originX;\n      var y = e.clientY - this.originY;\n      var startAngle = _constValue.R2D * Math.atan2(y, x);\n      elObj = (0, _reactAddonsUpdate2.default)(elObj, {\n        isDragging: {\n          $set: true\n        },\n        startAngle: {\n          $set: startAngle\n        }\n      });\n      this.setState(_defineProperty({}, refName, elObj));\n    }\n  }, {\n    key: 'handleMouseMove',\n    value: function handleMouseMove(e) {\n      var _state2 = this.state,\n          clockHandSecond = _state2.clockHandSecond,\n          clockHandMinute = _state2.clockHandMinute,\n          clockHandHour = _state2.clockHandHour;\n\n      if (clockHandSecond.isDragging || clockHandMinute.isDragging || clockHandHour.isDragging) {\n        this._clearInterval();\n\n        var refName = void 0;\n        var roundingAngle = _constValue.SECOND_DEGREE_NUMBER;\n\n        if (clockHandSecond.isDragging) {\n          refName = 'clockHandSecond';\n        }\n\n        if (clockHandMinute.isDragging) {\n          refName = 'clockHandMinute';\n        }\n\n        if (clockHandHour.isDragging) {\n          refName = 'clockHandHour';\n          roundingAngle = _constValue.HOUR_DEGREE_NUMBER;\n        }\n\n        var elObj = this.state[refName];\n        var x = e.clientX - this.originX;\n        var y = e.clientY - this.originY;\n        var d = _constValue.R2D * Math.atan2(y, x);\n        var rotation = Number(d - elObj.startAngle);\n        rotation = Math.floor((rotation % 360 + roundingAngle / 2) / roundingAngle) * roundingAngle;\n        var degree = elObj.angle + rotation;\n\n        if (degree >= 360) {\n          degree = degree - 360;\n        }\n\n        if (degree < 0) {\n          degree = degree + 360;\n        }\n\n        var value = degree / roundingAngle;\n        value = formatClockNumber(value);\n\n        if (clockHandHour.isDragging) {\n          if (value == '00') {\n            value = 12;\n          }\n        }\n\n        elObj = (0, _reactAddonsUpdate2.default)(elObj, {\n          value: {\n            $set: value\n          },\n          degree: {\n            $set: degree\n          }\n        });\n        this.setState(_defineProperty({}, refName, elObj));\n      }\n    }\n  }, {\n    key: 'handleMouseUp',\n    value: function handleMouseUp() {\n      var _state3 = this.state,\n          clockHandSecond = _state3.clockHandSecond,\n          clockHandMinute = _state3.clockHandMinute,\n          clockHandHour = _state3.clockHandHour;\n\n      if (clockHandSecond.isDragging || clockHandMinute.isDragging || clockHandHour.isDragging) {\n        var clockHandSecondDegree = this.state.clockHandSecond.degree;\n        var clockHandMinuteDegree = this.state.clockHandMinute.degree;\n        var clockHandHourDegree = this.state.clockHandHour.degree;\n        clockHandSecond = (0, _reactAddonsUpdate2.default)(clockHandSecond, {\n          isDragging: {\n            $set: false\n          },\n          angle: {\n            $set: clockHandSecondDegree\n          }\n        });\n        clockHandMinute = (0, _reactAddonsUpdate2.default)(clockHandMinute, {\n          isDragging: {\n            $set: false\n          },\n          angle: {\n            $set: clockHandMinuteDegree\n          }\n        });\n        clockHandHour = (0, _reactAddonsUpdate2.default)(clockHandHour, {\n          isDragging: {\n            $set: false\n          },\n          angle: {\n            $set: clockHandHourDegree\n          }\n        });\n        this.setState({\n          clockHandSecond: clockHandSecond,\n          clockHandMinute: clockHandMinute,\n          clockHandHour: clockHandHour\n        });\n      }\n    }\n  }, {\n    key: 'changeTime',\n    value: function changeTime(e) {\n      e.stopPropagation();\n    }\n  }, {\n    key: 'reset',\n    value: function reset() {\n      this.resetting = true;\n      var res = this.resetClockHandObj();\n      this.initializeClock();\n      this.props.onResetTime(res);\n    }\n  }, {\n    key: 'defaultTime',\n    value: function defaultTime() {\n      this.resetting = true;\n      var res = this.resetClockHandObj(false, true);\n\n      this._clearInterval();\n\n      this.props.onResetDefaultTime(res);\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      this.resetting = true;\n      var res = this.resetClockHandObj(true);\n\n      this._clearInterval();\n\n      this.props.onClearTime(res);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this4 = this;\n\n      var _props = this.props,\n          size = _props.size,\n          locale = _props.locale;\n      var _state4 = this.state,\n          defaultTimeObj = _state4.defaultTimeObj,\n          clockHandSecond = _state4.clockHandSecond,\n          clockHandMinute = _state4.clockHandMinute,\n          clockHandHour = _state4.clockHandHour,\n          meridiem = _state4.meridiem;\n      var secondStyle = {\n        transform: 'translate(' + SECONDS_TRANSLATE_FIRST_SIZE[size] + ') rotate(' + clockHandSecond.degree + 'deg) translate(' + SECONDS_TRANSLATE_SECOND_SIZE[size] + ')',\n        WebkitTransform: 'translate(' + SECONDS_TRANSLATE_FIRST_SIZE[size] + ') rotate(' + clockHandSecond.degree + 'deg) translate(' + SECONDS_TRANSLATE_SECOND_SIZE[size] + ')',\n        MozTransform: 'translate(' + SECONDS_TRANSLATE_FIRST_SIZE[size] + ') rotate(' + clockHandSecond.degree + 'deg) translate(' + SECONDS_TRANSLATE_SECOND_SIZE[size] + ')',\n        msTransform: 'translate(' + SECONDS_TRANSLATE_FIRST_SIZE[size] + ') rotate(' + clockHandSecond.degree + 'deg) translate(' + SECONDS_TRANSLATE_SECOND_SIZE[size] + ')',\n        OTransform: 'translate(' + SECONDS_TRANSLATE_FIRST_SIZE[size] + ') rotate(' + clockHandSecond.degree + 'deg) translate(' + SECONDS_TRANSLATE_SECOND_SIZE[size] + ')'\n      };\n      var minuteStyle = {\n        transform: 'translate(' + MINUTES_TRANSLATE_FIRST_SIZE[size] + ') rotate(' + clockHandMinute.degree + 'deg) translate(' + MINUTES_TRANSLATE_SECOND_SIZE[size] + ')',\n        WebkitTransform: 'translate(' + MINUTES_TRANSLATE_FIRST_SIZE[size] + ') rotate(' + clockHandMinute.degree + 'deg) translate(' + MINUTES_TRANSLATE_SECOND_SIZE + ')',\n        MozTransform: 'translate(' + MINUTES_TRANSLATE_FIRST_SIZE[size] + ') rotate(' + clockHandMinute.degree + 'deg) translate(' + MINUTES_TRANSLATE_SECOND_SIZE[size] + ')',\n        msTransform: 'translate(' + MINUTES_TRANSLATE_FIRST_SIZE[size] + ') rotate(' + clockHandMinute.degree + 'deg) translate(' + MINUTES_TRANSLATE_SECOND_SIZE[size] + ')',\n        OTransform: 'translate(' + MINUTES_TRANSLATE_FIRST_SIZE[size] + ') rotate(' + clockHandMinute.degree + 'deg) translate(' + MINUTES_TRANSLATE_SECOND_SIZE[size] + ')'\n      };\n      var hourStyle = {\n        transform: 'translate(' + HOURS_TRANSLATE_FIRST_SIZE[size] + ') rotate(' + clockHandHour.degree + 'deg) translate(' + HOURS_TRANSLATE_SECOND_SIZE[size] + ')',\n        WebkitTransform: 'translate(' + HOURS_TRANSLATE_FIRST_SIZE[size] + ') rotate(' + clockHandHour.degree + 'deg) translate(' + HOURS_TRANSLATE_SECOND_SIZE[size] + ')',\n        MozTransform: 'translate(' + HOURS_TRANSLATE_FIRST_SIZE[size] + ') rotate(' + clockHandHour.degree + 'deg) translate(' + HOURS_TRANSLATE_SECOND_SIZE[size] + ')',\n        msTransform: 'translate(' + HOURS_TRANSLATE_FIRST_SIZE[size] + ') rotate(' + clockHandHour.degree + 'deg) translate(' + HOURS_TRANSLATE_SECOND_SIZE[size] + ')',\n        OTransform: 'translate(' + HOURS_TRANSLATE_FIRST_SIZE[size] + ') rotate(' + clockHandHour.degree + 'deg) translate(' + HOURS_TRANSLATE_SECOND_SIZE[size] + ')'\n      };\n      var minutesItem = [];\n\n      for (var i = 0; i < 60; i++) {\n        var isQuarter = false;\n        var isFive = false;\n        var translateFirst = TRANSLATE_FIRST_SIZE[size];\n        var translateSecond = TRANSLATE_SECOND_SIZE[size];\n\n        if (_constValue.QUARTER.indexOf(i) != -1) {\n          isQuarter = true;\n          translateFirst = TRANSLATE_QUARTER_SECOND_SIZE[size];\n        }\n\n        if (i % 5 == 0) {\n          isFive = true;\n        }\n\n        var minutesItemClass = (0, _classnames2.default)('picky-date-time-clock__clock-minute', isQuarter && 'picky-date-time-clock__clock-minute--quarter', isFive && 'picky-date-time-clock__clock-minute--five');\n        var degree = i * 6 + 180;\n        var minutesItemStyle = {\n          transform: 'translate(' + translateFirst + ') rotate(' + degree + 'deg) translate(' + translateSecond + ')',\n          WebkitTransform: 'translate(' + translateFirst + ') rotate(' + degree + 'deg) translate(' + translateSecond + ')',\n          MozTransform: 'translate(' + translateFirst + ') rotate(' + degree + 'deg) translate(' + translateSecond + ')',\n          msTransform: 'translate(' + translateFirst + ') rotate(' + degree + 'deg) translate(' + translateSecond + ')',\n          OTransform: 'translate(' + translateFirst + ') rotate(' + degree + 'deg) translate(' + translateSecond + ')'\n        };\n        minutesItem.push(_react2.default.createElement('div', {\n          key: i,\n          className: minutesItemClass,\n          style: minutesItemStyle\n        }));\n      }\n\n      return _react2.default.createElement('div', {\n        className: 'picky-date-time-clock ' + size,\n        ref: function ref(_ref7) {\n          return _this4.clock = _ref7;\n        }\n      }, _react2.default.createElement('div', {\n        className: 'picky-date-time-clock__circle ' + size,\n        ref: function ref(_ref5) {\n          return _this4.clockCircle = _ref5;\n        }\n      }, _react2.default.createElement('div', {\n        className: 'picky-date-time-clock__clock-hand picky-date-time-clock__clock-hand--second',\n        style: secondStyle,\n        onMouseOver: function onMouseOver(e) {\n          return _this4.onMouseOver('clockHandSecond', e);\n        },\n        onMouseOut: function onMouseOut(e) {\n          return _this4.onMouseOut('clockHandSecond', e);\n        },\n        onMouseDown: function onMouseDown(e) {\n          return _this4.handleMouseDown('clockHandSecond', e);\n        },\n        ref: function ref(_ref) {\n          return _this4.clockHandSecond = _ref;\n        }\n      }), _react2.default.createElement('div', {\n        className: 'picky-date-time-clock__clock-hand picky-date-time-clock__clock-hand--minute',\n        style: minuteStyle,\n        onMouseOver: function onMouseOver(e) {\n          return _this4.onMouseOver('clockHandMinute', e);\n        },\n        onMouseOut: function onMouseOut(e) {\n          return _this4.onMouseOut('clockHandMinute', e);\n        },\n        onMouseDown: function onMouseDown(e) {\n          return _this4.handleMouseDown('clockHandMinute', e);\n        },\n        ref: function ref(_ref2) {\n          return _this4.clockHandMinute = _ref2;\n        }\n      }), _react2.default.createElement('div', {\n        className: 'picky-date-time-clock__clock-hand picky-date-time-clock__clock-hand--hour',\n        style: hourStyle,\n        onMouseOver: function onMouseOver(e) {\n          return _this4.onMouseOver('clockHandHour', e);\n        },\n        onMouseOut: function onMouseOut(e) {\n          return _this4.onMouseOut('clockHandHour', e);\n        },\n        onMouseDown: function onMouseDown(e) {\n          return _this4.handleMouseDown('clockHandHour', e);\n        },\n        ref: function ref(_ref3) {\n          return _this4.clockHandHour = _ref3;\n        }\n      }), minutesItem, _react2.default.createElement('div', {\n        className: 'picky-date-time-clock__clock-center',\n        ref: function ref(_ref4) {\n          return _this4.clockCenter = _ref4;\n        }\n      })), _react2.default.createElement('div', {\n        className: 'picky-date-time-clock__inputer-wrapper'\n      }, _react2.default.createElement('div', {\n        className: 'picky-date-time-clock__inputer'\n      }, _react2.default.createElement('input', {\n        className: 'picky-date-time-clock__input',\n        value: clockHandHour.value + ':' + clockHandMinute.value + ':' + clockHandSecond.value + ' ' + meridiem,\n        onFocus: function onFocus() {\n          return _this4.onFocus();\n        },\n        onKeyDown: function onKeyDown(e) {\n          return _this4.onKeyDown(e);\n        },\n        onChange: function onChange(e) {\n          return _this4.changeTime(e);\n        },\n        onClick: function onClick(e) {\n          return _this4.onClick(e);\n        },\n        onWheel: function onWheel(e) {\n          return _this4.handleMouseWheel(e);\n        },\n        ref: function ref(_ref6) {\n          return _this4.timeInput = _ref6;\n        }\n      }), _react2.default.createElement('span', {\n        className: 'picky-date-time-clock__inline-span picky-date-time-clock__icon picky-date-time-clock__icon--remove_circle_outline picky-date-time-remove_circle_outline',\n        onClick: function onClick() {\n          return _this4.clear();\n        },\n        title: _locale.LOCALE[locale]['clear']\n      })), _react2.default.createElement('div', {\n        className: 'picky-date-time-clock__inline-div picky-date-time-clock__inline-div--middle'\n      }, _react2.default.createElement('span', {\n        className: 'picky-date-time-clock__inline-span picky-date-time-clock__icon picky-date-time-clock__icon--schedule picky-date-time-schedule',\n        onClick: this.timeinterval === false || defaultTimeObj ? function () {\n          return _this4.reset(false);\n        } : function () {\n          return;\n        },\n        title: _locale.LOCALE[locale]['now']\n      })), defaultTimeObj ? _react2.default.createElement('div', {\n        className: 'picky-date-time-clock__inline-div picky-date-time-clock__inline-div--middle'\n      }, _react2.default.createElement('span', {\n        className: 'picky-date-time-clock__inline-span picky-date-time-clock__icon picky-date-time-clock__icon--refresh picky-date-time-refresh',\n        onClick: function onClick() {\n          return _this4.defaultTime(true);\n        },\n        title: _locale.LOCALE[locale]['reset']\n      })) : ''));\n    }\n  }]);\n\n  return Clock;\n}(_react2.default.Component);\n\nClock.propTypes = {\n  size: _propTypes2.default.string,\n  locale: _propTypes2.default.string,\n  defaultTime: _propTypes2.default.string,\n  onSecondChange: _propTypes2.default.func,\n  onMinuteChange: _propTypes2.default.func,\n  onHourChange: _propTypes2.default.func,\n  onMeridiemChange: _propTypes2.default.func,\n  onResetTime: _propTypes2.default.func,\n  onClearTime: _propTypes2.default.func,\n  onResetDefaultTime: _propTypes2.default.func\n};\nClock.defaultProps = {\n  size: 'm',\n  locale: 'en-US',\n  defaultTime: '',\n  onSecondChange: function onSecondChange() {},\n  onMinuteChange: function onMinuteChange() {},\n  onHourChange: function onHourChange() {},\n  onMeridiemChange: function onMeridiemChange() {},\n  onResetTime: function onResetTime() {},\n  onClearTime: function onClearTime() {},\n  onResetDefaultTime: function onResetDefaultTime() {}\n};\nexports.default = Clock;","map":null,"metadata":{},"sourceType":"script"}