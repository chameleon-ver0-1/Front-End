{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n/* eslint react/no-did-mount-set-state: 0 */\n\nimport React, { cloneElement, Children, Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport classNames from 'classnames';\nimport debounce from 'lodash/debounce';\nimport { isFlexSupported } from './utils';\n\nvar Steps = function (_Component) {\n  _inherits(Steps, _Component);\n\n  function Steps(props) {\n    _classCallCheck(this, Steps);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, props));\n\n    _this.onStepClick = function (next) {\n      var _this$props = _this.props,\n          onChange = _this$props.onChange,\n          current = _this$props.current;\n\n      if (onChange && current !== next) {\n        onChange(next);\n      }\n    };\n\n    _this.calcStepOffsetWidth = function () {\n      if (isFlexSupported()) {\n        return;\n      } // Just for IE9\n\n\n      var domNode = findDOMNode(_this);\n\n      if (domNode.children.length > 0) {\n        if (_this.calcTimeout) {\n          clearTimeout(_this.calcTimeout);\n        }\n\n        _this.calcTimeout = setTimeout(function () {\n          // +1 for fit edge bug of digit width, like 35.4px\n          var lastStepOffsetWidth = (domNode.lastChild.offsetWidth || 0) + 1; // Reduce shake bug\n\n          if (_this.state.lastStepOffsetWidth === lastStepOffsetWidth || Math.abs(_this.state.lastStepOffsetWidth - lastStepOffsetWidth) <= 3) {\n            return;\n          }\n\n          _this.setState({\n            lastStepOffsetWidth: lastStepOffsetWidth\n          });\n        });\n      }\n    };\n\n    _this.state = {\n      flexSupported: true,\n      lastStepOffsetWidth: 0\n    };\n    _this.calcStepOffsetWidth = debounce(_this.calcStepOffsetWidth, 150);\n    return _this;\n  }\n\n  Steps.prototype.componentDidMount = function componentDidMount() {\n    this.calcStepOffsetWidth();\n\n    if (!isFlexSupported()) {\n      this.setState({\n        flexSupported: false\n      });\n    }\n  };\n\n  Steps.prototype.componentDidUpdate = function componentDidUpdate() {\n    this.calcStepOffsetWidth();\n  };\n\n  Steps.prototype.componentWillUnmount = function componentWillUnmount() {\n    if (this.calcTimeout) {\n      clearTimeout(this.calcTimeout);\n    }\n\n    if (this.calcStepOffsetWidth && this.calcStepOffsetWidth.cancel) {\n      this.calcStepOffsetWidth.cancel();\n    }\n  };\n\n  Steps.prototype.render = function render() {\n    var _classNames,\n        _this2 = this;\n\n    var _props = this.props,\n        prefixCls = _props.prefixCls,\n        _props$style = _props.style,\n        style = _props$style === undefined ? {} : _props$style,\n        className = _props.className,\n        children = _props.children,\n        direction = _props.direction,\n        labelPlacement = _props.labelPlacement,\n        iconPrefix = _props.iconPrefix,\n        status = _props.status,\n        size = _props.size,\n        current = _props.current,\n        progressDot = _props.progressDot,\n        initial = _props.initial,\n        icons = _props.icons,\n        onChange = _props.onChange,\n        restProps = _objectWithoutProperties(_props, ['prefixCls', 'style', 'className', 'children', 'direction', 'labelPlacement', 'iconPrefix', 'status', 'size', 'current', 'progressDot', 'initial', 'icons', 'onChange']);\n\n    var _state = this.state,\n        lastStepOffsetWidth = _state.lastStepOffsetWidth,\n        flexSupported = _state.flexSupported;\n    var filteredChildren = React.Children.toArray(children).filter(function (c) {\n      return !!c;\n    });\n    var lastIndex = filteredChildren.length - 1;\n    var adjustedlabelPlacement = !!progressDot ? 'vertical' : labelPlacement;\n    var classString = classNames(prefixCls, prefixCls + '-' + direction, className, (_classNames = {}, _classNames[prefixCls + '-' + size] = size, _classNames[prefixCls + '-label-' + adjustedlabelPlacement] = direction === 'horizontal', _classNames[prefixCls + '-dot'] = !!progressDot, _classNames[prefixCls + '-flex-not-supported'] = !flexSupported, _classNames));\n    return React.createElement('div', _extends({\n      className: classString,\n      style: style\n    }, restProps), Children.map(filteredChildren, function (child, index) {\n      if (!child) {\n        return null;\n      }\n\n      var stepNumber = initial + index;\n\n      var childProps = _extends({\n        stepNumber: '' + (stepNumber + 1),\n        stepIndex: stepNumber,\n        prefixCls: prefixCls,\n        iconPrefix: iconPrefix,\n        wrapperStyle: style,\n        progressDot: progressDot,\n        icons: icons,\n        onStepClick: onChange && _this2.onStepClick\n      }, child.props);\n\n      if (!flexSupported && direction !== 'vertical' && index !== lastIndex) {\n        childProps.itemWidth = 100 / lastIndex + '%';\n        childProps.adjustMarginRight = -Math.round(lastStepOffsetWidth / lastIndex + 1);\n      } // fix tail color\n\n\n      if (status === 'error' && index === current - 1) {\n        childProps.className = prefixCls + '-next-error';\n      }\n\n      if (!child.props.status) {\n        if (stepNumber === current) {\n          childProps.status = status;\n        } else if (stepNumber < current) {\n          childProps.status = 'finish';\n        } else {\n          childProps.status = 'wait';\n        }\n      }\n\n      return cloneElement(child, childProps);\n    }));\n  };\n\n  return Steps;\n}(Component);\n\nSteps.propTypes = {\n  prefixCls: PropTypes.string,\n  className: PropTypes.string,\n  iconPrefix: PropTypes.string,\n  direction: PropTypes.string,\n  labelPlacement: PropTypes.string,\n  children: PropTypes.any,\n  status: PropTypes.string,\n  size: PropTypes.string,\n  progressDot: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n  style: PropTypes.object,\n  initial: PropTypes.number,\n  current: PropTypes.number,\n  icons: PropTypes.shape({\n    finish: PropTypes.node,\n    error: PropTypes.node\n  }),\n  onChange: PropTypes.func\n};\nSteps.defaultProps = {\n  prefixCls: 'rc-steps',\n  iconPrefix: 'rc',\n  direction: 'horizontal',\n  labelPlacement: 'horizontal',\n  initial: 0,\n  current: 0,\n  status: 'process',\n  size: '',\n  progressDot: false\n};\nexport default Steps;","map":null,"metadata":{},"sourceType":"module"}