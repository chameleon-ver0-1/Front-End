{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport * as React from 'react';\nimport Animate from 'rc-animate';\nimport raf from '../_util/raf';\nimport { tuple } from '../_util/type';\nimport ListItem from './ListItem';\nexport var OmitProps = tuple('handleFilter', 'handleSelect', 'handleSelectAll', 'handleClear', 'body', 'checkedKeys');\n\nvar ListBody =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ListBody, _React$Component);\n\n  function ListBody() {\n    var _this;\n\n    _classCallCheck(this, ListBody);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ListBody).apply(this, arguments));\n    _this.state = {\n      mounted: false\n    };\n\n    _this.onItemSelect = function (item) {\n      var _this$props = _this.props,\n          onItemSelect = _this$props.onItemSelect,\n          selectedKeys = _this$props.selectedKeys;\n      var checked = selectedKeys.indexOf(item.key) >= 0;\n      onItemSelect(item.key, !checked);\n    };\n\n    return _this;\n  }\n\n  _createClass(ListBody, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.mountId = raf(function () {\n        _this2.setState({\n          mounted: true\n        });\n      });\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      raf.cancel(this.mountId);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var mounted = this.state.mounted;\n      var _this$props2 = this.props,\n          prefixCls = _this$props2.prefixCls,\n          onScroll = _this$props2.onScroll,\n          filteredRenderItems = _this$props2.filteredRenderItems,\n          lazy = _this$props2.lazy,\n          selectedKeys = _this$props2.selectedKeys;\n      return React.createElement(Animate, {\n        component: \"ul\",\n        componentProps: {\n          onScroll: onScroll\n        },\n        className: \"\".concat(prefixCls, \"-content\"),\n        transitionName: mounted ? \"\".concat(prefixCls, \"-content-item-highlight\") : '',\n        transitionLeave: false\n      }, filteredRenderItems.map(function (_ref) {\n        var renderedEl = _ref.renderedEl,\n            renderedText = _ref.renderedText,\n            item = _ref.item;\n        var disabled = item.disabled;\n        var checked = selectedKeys.indexOf(item.key) >= 0;\n        return React.createElement(ListItem, {\n          disabled: disabled,\n          key: item.key,\n          item: item,\n          lazy: lazy,\n          renderedText: renderedText,\n          renderedEl: renderedEl,\n          checked: checked,\n          prefixCls: prefixCls,\n          onClick: _this3.onItemSelect\n        });\n      }));\n    }\n  }]);\n\n  return ListBody;\n}(React.Component);\n\nexport default (function (props) {\n  return React.createElement(ListBody, props);\n});","map":null,"metadata":{},"sourceType":"module"}