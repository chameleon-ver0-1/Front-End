{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _useEventCallback = _interopRequireDefault(require(\"@restart/hooks/useEventCallback\"));\n\nvar _SafeAnchor = _interopRequireDefault(require(\"./SafeAnchor\"));\n\nvar _SelectableContext = _interopRequireWildcard(require(\"./SelectableContext\"));\n\nvar _ThemeProvider = require(\"./ThemeProvider\");\n\nvar _NavContext = _interopRequireDefault(require(\"./NavContext\"));\n\nvar defaultProps = {\n  as: _SafeAnchor.default,\n  disabled: false\n};\n\nvar DropdownItem = _react.default.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      children = _ref.children,\n      eventKey = _ref.eventKey,\n      disabled = _ref.disabled,\n      href = _ref.href,\n      onClick = _ref.onClick,\n      onSelect = _ref.onSelect,\n      Component = _ref.as,\n      props = (0, _objectWithoutPropertiesLoose2.default)(_ref, [\"bsPrefix\", \"className\", \"children\", \"eventKey\", \"disabled\", \"href\", \"onClick\", \"onSelect\", \"as\"]);\n  var prefix = (0, _ThemeProvider.useBootstrapPrefix)(bsPrefix, 'dropdown-item');\n  var onSelectCtx = (0, _react.useContext)(_SelectableContext.default);\n  var navContext = (0, _react.useContext)(_NavContext.default);\n\n  var _ref2 = navContext || {},\n      activeKey = _ref2.activeKey;\n\n  var key = (0, _SelectableContext.makeEventKey)(eventKey, href);\n  var active = props.active == null && key != null ? (0, _SelectableContext.makeEventKey)(activeKey) === key : props.active;\n  var handleClick = (0, _useEventCallback.default)(function (event) {\n    // SafeAnchor handles the disabled case, but we handle it here\n    // for other components\n    if (disabled) return;\n    if (onClick) onClick(event);\n    if (onSelectCtx) onSelectCtx(key, event);\n    if (onSelect) onSelect(key, event);\n  });\n  return _react.default.createElement(Component, (0, _extends2.default)({}, props, {\n    ref: ref,\n    href: href,\n    disabled: disabled,\n    className: (0, _classnames.default)(className, prefix, active && 'active', disabled && 'disabled'),\n    onClick: handleClick\n  }), children);\n});\n\nDropdownItem.displayName = 'DropdownItem';\nDropdownItem.defaultProps = defaultProps;\nvar _default = DropdownItem;\nexports.default = _default;\nmodule.exports = exports[\"default\"];","map":null,"metadata":{},"sourceType":"script"}