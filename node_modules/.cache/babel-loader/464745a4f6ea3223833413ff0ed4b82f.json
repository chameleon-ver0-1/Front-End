{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/* eslint jsx-a11y/no-noninteractive-element-to-interactive-role: 0 */\n\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDom from 'react-dom';\nimport classNames from 'classnames';\nimport raf from 'raf';\n\nvar scrollTo = function scrollTo(element, to, duration) {\n  // jump to target if duration zero\n  if (duration <= 0) {\n    raf(function () {\n      element.scrollTop = to;\n    });\n    return;\n  }\n\n  var difference = to - element.scrollTop;\n  var perTick = difference / duration * 10;\n  raf(function () {\n    element.scrollTop += perTick;\n    if (element.scrollTop === to) return;\n    scrollTo(element, to, duration - 10);\n  });\n};\n\nvar Select =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Select, _Component);\n\n  function Select() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Select);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Select)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      active: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSelect\", function (value) {\n      var _this$props = _this.props,\n          onSelect = _this$props.onSelect,\n          type = _this$props.type;\n      onSelect(type, value);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleMouseEnter\", function (e) {\n      var onMouseEnter = _this.props.onMouseEnter;\n\n      _this.setState({\n        active: true\n      });\n\n      onMouseEnter(e);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleMouseLeave\", function () {\n      _this.setState({\n        active: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"saveList\", function (node) {\n      _this.list = node;\n    });\n\n    return _this;\n  }\n\n  _createClass(Select, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // jump to selected option\n      this.scrollToSelected(0);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var selectedIndex = this.props.selectedIndex; // smooth scroll to selected option\n\n      if (prevProps.selectedIndex !== selectedIndex) {\n        this.scrollToSelected(120);\n      }\n    }\n  }, {\n    key: \"getOptions\",\n    value: function getOptions() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          options = _this$props2.options,\n          selectedIndex = _this$props2.selectedIndex,\n          prefixCls = _this$props2.prefixCls;\n      return options.map(function (item, index) {\n        var _classNames;\n\n        var cls = classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-select-option-selected\"), selectedIndex === index), _defineProperty(_classNames, \"\".concat(prefixCls, \"-select-option-disabled\"), item.disabled), _classNames));\n        var onClick = item.disabled ? undefined : function () {\n          _this2.onSelect(item.value);\n        };\n        return React.createElement(\"li\", {\n          role: \"button\",\n          onClick: onClick,\n          className: cls,\n          key: index,\n          disabled: item.disabled\n        }, item.value);\n      });\n    }\n  }, {\n    key: \"scrollToSelected\",\n    value: function scrollToSelected(duration) {\n      // move to selected item\n      var selectedIndex = this.props.selectedIndex;\n      var select = ReactDom.findDOMNode(this);\n      var list = ReactDom.findDOMNode(this.list);\n\n      if (!list) {\n        return;\n      }\n\n      var index = selectedIndex;\n\n      if (index < 0) {\n        index = 0;\n      }\n\n      var topOption = list.children[index];\n      var to = topOption.offsetTop;\n      scrollTo(select, to, duration);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          prefixCls = _this$props3.prefixCls,\n          options = _this$props3.options;\n      var active = this.state.active;\n\n      if (options.length === 0) {\n        return null;\n      }\n\n      var cls = classNames(\"\".concat(prefixCls, \"-select\"), _defineProperty({}, \"\".concat(prefixCls, \"-select-active\"), active));\n      return React.createElement(\"div\", {\n        className: cls,\n        onMouseEnter: this.handleMouseEnter,\n        onMouseLeave: this.handleMouseLeave\n      }, React.createElement(\"ul\", {\n        ref: this.saveList\n      }, this.getOptions()));\n    }\n  }]);\n\n  return Select;\n}(Component);\n\n_defineProperty(Select, \"propTypes\", {\n  prefixCls: PropTypes.string,\n  options: PropTypes.array,\n  selectedIndex: PropTypes.number,\n  type: PropTypes.string,\n  onSelect: PropTypes.func,\n  onMouseEnter: PropTypes.func\n});\n\nexport default Select;","map":null,"metadata":{},"sourceType":"module"}